[
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 47180296,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Start a vm without dedicated cores when a dedicated one is already running",
        "description": "",
        "id": "dedicated-cores;start-a-vm-without-dedicated-cores-when-a-dedicated-one-is-already-running",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5796281,
              "status": "passed"
            },
            "line": 4,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distro",
                  "Distro Version"
                ],
                "line": 5
              },
              {
                "cells": [
                  "host1.example.com",
                  "6 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7"
                ],
                "line": 6
              },
              {
                "cells": [
                  "host2.example.com",
                  "6 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7"
                ],
                "line": 7
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 213095,
              "status": "passed"
            },
            "line": 8,
            "name": "software installed on host host1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 9
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 10
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 11
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 85679,
              "status": "passed"
            },
            "line": 12,
            "name": "software installed on host host2.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 13
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 14
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 15
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 150302,
              "status": "passed"
            },
            "line": 16,
            "name": "host host1.example.com CPUs are 1:",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 5
                },
                {
                  "val": "1",
                  "offset": 32
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags",
                  "Cores",
                  "Threads"
                ],
                "line": 17
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc",
                  "2",
                  "4"
                ],
                "line": 18
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 78522,
              "status": "passed"
            },
            "line": 19,
            "name": "host host2.example.com CPUs are 1:",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 5
                },
                {
                  "val": "1",
                  "offset": 32
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags",
                  "Cores",
                  "Threads"
                ],
                "line": 20
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc",
                  "2",
                  "4"
                ],
                "line": 21
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 476010,
              "status": "passed"
            },
            "line": 22,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 23
              },
              {
                "cells": [
                  "vm-decicatedcore",
                  "2 GB",
                  "2 GB",
                  "2",
                  "x86_64"
                ],
                "line": 24
              },
              {
                "cells": [
                  "vm-sharedcore",
                  "2 GB",
                  "2 GB",
                  "2",
                  "x86_64"
                ],
                "line": 25
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 104719,
              "status": "passed"
            },
            "line": 26,
            "name": "host host1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 52356,
              "status": "passed"
            },
            "line": 27,
            "name": "host host2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 243239,
              "status": "passed"
            },
            "line": 28,
            "name": "vm-decicatedcore requires dedicated cores",
            "match": {
              "arguments": [
                {
                  "val": "vm-decicatedcore",
                  "offset": 0
                }
              ],
              "location": "PlannerDefs.addCoreDedicationExpectation(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 222916,
              "status": "passed"
            },
            "line": 29,
            "name": "vm-decicatedcore is running on host1.example.com",
            "match": {
              "arguments": [
                {
                  "val": "vm-decicatedcore",
                  "offset": 0
                },
                {
                  "val": "host1.example.com",
                  "offset": 31
                }
              ],
              "location": "PlannerDefs.setVmRunningOnHost(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16489909,
              "status": "passed"
            },
            "line": 30,
            "name": "VM vm-sharedcore is started",
            "match": {
              "arguments": [
                {
                  "val": "vm-sharedcore",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 699333,
              "status": "passed"
            },
            "line": 31,
            "name": "VM vm-sharedcore gets scheduled on host host2.example.com with kvm hypervisor",
            "match": {
              "arguments": [
                {
                  "val": "vm-sharedcore",
                  "offset": 3
                },
                {
                  "val": "host2.example.com",
                  "offset": 40
                }
              ],
              "location": "PlannerDefs.verifyVmScheduledOnHostWithKvm(String,String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 32,
            "value": "#because on host-1 there are not enough cores left"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 655896,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 35,
        "name": "Start a vm with dedicated cores when a shared one is already running",
        "description": "",
        "id": "dedicated-cores;start-a-vm-with-dedicated-cores-when-a-shared-one-is-already-running",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 254691,
              "status": "passed"
            },
            "line": 36,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distro",
                  "Distro Version"
                ],
                "line": 37
              },
              {
                "cells": [
                  "host1.example.com",
                  "6 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7"
                ],
                "line": 38
              },
              {
                "cells": [
                  "host2.example.com",
                  "6 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7"
                ],
                "line": 39
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 133728,
              "status": "passed"
            },
            "line": 40,
            "name": "software installed on host host1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 41
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 42
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 43
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 114568,
              "status": "passed"
            },
            "line": 44,
            "name": "software installed on host host2.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 45
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 46
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 47
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 149016,
              "status": "passed"
            },
            "line": 48,
            "name": "host host1.example.com CPUs are 1:",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 5
                },
                {
                  "val": "1",
                  "offset": 32
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags",
                  "Cores",
                  "Threads"
                ],
                "line": 49
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc",
                  "2",
                  "4"
                ],
                "line": 50
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 131774,
              "status": "passed"
            },
            "line": 51,
            "name": "host host2.example.com CPUs are 1:",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 5
                },
                {
                  "val": "1",
                  "offset": 32
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags",
                  "Cores",
                  "Threads"
                ],
                "line": 52
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc",
                  "2",
                  "4"
                ],
                "line": 53
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 322615,
              "status": "passed"
            },
            "line": 54,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 55
              },
              {
                "cells": [
                  "vm-decicatedcore",
                  "2 GB",
                  "2 GB",
                  "2",
                  "x86_64"
                ],
                "line": 56
              },
              {
                "cells": [
                  "vm-sharedcore",
                  "2 GB",
                  "2 GB",
                  "2",
                  "x86_64"
                ],
                "line": 57
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 59420,
              "status": "passed"
            },
            "line": 58,
            "name": "host host1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 51364,
              "status": "passed"
            },
            "line": 59,
            "name": "host host2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 57094,
              "status": "passed"
            },
            "line": 60,
            "name": "vm-decicatedcore requires dedicated cores",
            "match": {
              "arguments": [
                {
                  "val": "vm-decicatedcore",
                  "offset": 0
                }
              ],
              "location": "PlannerDefs.addCoreDedicationExpectation(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 197531,
              "status": "passed"
            },
            "line": 61,
            "name": "vm-sharedcore is running on host1.example.com",
            "match": {
              "arguments": [
                {
                  "val": "vm-sharedcore",
                  "offset": 0
                },
                {
                  "val": "host1.example.com",
                  "offset": 28
                }
              ],
              "location": "PlannerDefs.setVmRunningOnHost(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3446450,
              "status": "passed"
            },
            "line": 62,
            "name": "VM vm-decicatedcore is started",
            "match": {
              "arguments": [
                {
                  "val": "vm-decicatedcore",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 419927,
              "status": "passed"
            },
            "line": 63,
            "name": "VM vm-decicatedcore gets scheduled on host host2.example.com with kvm hypervisor",
            "match": {
              "arguments": [
                {
                  "val": "vm-decicatedcore",
                  "offset": 3
                },
                {
                  "val": "host2.example.com",
                  "offset": 43
                }
              ],
              "location": "PlannerDefs.verifyVmScheduledOnHostWithKvm(String,String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "dedicated cores",
    "description": "",
    "id": "dedicated-cores",
    "keyword": "Feature",
    "uri": "stories/general/planner/expectations/core-dedication.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 642443,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 3,
        "name": "host selection with cache information",
        "description": "",
        "id": "support-for-host-cpu-cache-size-expectation;host-selection-with-cache-information",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 304756,
              "status": "passed"
            },
            "line": 4,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distro",
                  "Distro Version"
                ],
                "line": 5
              },
              {
                "cells": [
                  "host1.example.com",
                  "6 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7"
                ],
                "line": 6
              },
              {
                "cells": [
                  "host2.example.com",
                  "6 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7"
                ],
                "line": 7
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 187656,
              "status": "passed"
            },
            "line": 8,
            "name": "host host1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 32
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 9
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 10
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 138027,
              "status": "passed"
            },
            "line": 11,
            "name": "host host2.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 32
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 12
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 13
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1015422,
              "status": "passed"
            },
            "line": 14,
            "name": "host1.example.com manufaturer has 512 KB L1 cache",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 0
                },
                {
                  "val": "512 KB",
                  "offset": 34
                },
                {
                  "val": "1",
                  "offset": 42
                }
              ],
              "location": "PlannerDefs.setCacheSize(String,String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 166477,
              "status": "passed"
            },
            "line": 15,
            "name": "host1.example.com manufaturer has 1024 KB L2 cache",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 0
                },
                {
                  "val": "1024 KB",
                  "offset": 34
                },
                {
                  "val": "2",
                  "offset": 43
                }
              ],
              "location": "PlannerDefs.setCacheSize(String,String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 100542,
              "status": "passed"
            },
            "line": 16,
            "name": "host2.example.com manufaturer has NO L1 cache",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 0
                },
                {
                  "val": "1",
                  "offset": 38
                }
              ],
              "location": "PlannerDefs.setNoCache(String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 86379,
              "status": "passed"
            },
            "line": 17,
            "name": "host2.example.com manufaturer has NO L2 cache",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 0
                },
                {
                  "val": "2",
                  "offset": 38
                }
              ],
              "location": "PlannerDefs.setNoCache(String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 100690,
              "status": "passed"
            },
            "line": 18,
            "name": "software installed on host host2.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 19
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 20
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 21
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 97199,
              "status": "passed"
            },
            "line": 22,
            "name": "software installed on host host1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 23
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 24
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 25
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 48304,
              "status": "passed"
            },
            "line": 26,
            "name": "host host1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 42275,
              "status": "passed"
            },
            "line": 27,
            "name": "host host2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 156774,
              "status": "passed"
            },
            "line": 28,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 29
              },
              {
                "cells": [
                  "vm1",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 30
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 277406,
              "status": "passed"
            },
            "line": 31,
            "name": "VM vm1 requires 512 KB L1 cache",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "512 KB",
                  "offset": 16
                }
              ],
              "location": "PlannerDefs.setVmCacheRequirement(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17051378,
              "status": "passed"
            },
            "line": 32,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 351446,
              "status": "passed"
            },
            "line": 33,
            "name": "VM vm1 gets scheduled on host host1.example.com with kvm hypervisor",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "host1.example.com",
                  "offset": 30
                }
              ],
              "location": "PlannerDefs.verifyVmScheduledOnHostWithKvm(String,String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2408882,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 35,
        "name": "host selection with cache information, one host with too few cache, one with just enough",
        "description": "",
        "id": "support-for-host-cpu-cache-size-expectation;host-selection-with-cache-information,-one-host-with-too-few-cache,-one-with-just-enough",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 335839,
              "status": "passed"
            },
            "line": 36,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distro",
                  "Distro Version"
                ],
                "line": 37
              },
              {
                "cells": [
                  "host0.example.com",
                  "6 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7"
                ],
                "line": 38
              },
              {
                "cells": [
                  "host1.example.com",
                  "6 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7"
                ],
                "line": 39
              },
              {
                "cells": [
                  "host2.example.com",
                  "6 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7"
                ],
                "line": 40
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 146918,
              "status": "passed"
            },
            "line": 41,
            "name": "host host0.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host0.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 32
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 42
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 43
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 125463,
              "status": "passed"
            },
            "line": 44,
            "name": "host host1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 32
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 45
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 46
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 352118,
              "status": "passed"
            },
            "line": 47,
            "name": "host host2.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 32
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 48
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 49
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 143199,
              "status": "passed"
            },
            "comments": [
              {
                "line": 50,
                "value": "#too few cache"
              }
            ],
            "line": 51,
            "name": "host0.example.com manufaturer has 128 KB L1 cache",
            "match": {
              "arguments": [
                {
                  "val": "host0.example.com",
                  "offset": 0
                },
                {
                  "val": "128 KB",
                  "offset": 34
                },
                {
                  "val": "1",
                  "offset": 42
                }
              ],
              "location": "PlannerDefs.setCacheSize(String,String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 125510,
              "status": "passed"
            },
            "line": 52,
            "name": "host0.example.com manufaturer has 256 KB L2 cache",
            "match": {
              "arguments": [
                {
                  "val": "host0.example.com",
                  "offset": 0
                },
                {
                  "val": "256 KB",
                  "offset": 34
                },
                {
                  "val": "2",
                  "offset": 42
                }
              ],
              "location": "PlannerDefs.setCacheSize(String,String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 356744,
              "status": "passed"
            },
            "comments": [
              {
                "line": 53,
                "value": "#just enough, this host should be preferred"
              }
            ],
            "line": 54,
            "name": "host1.example.com manufaturer has 512 KB L1 cache",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 0
                },
                {
                  "val": "512 KB",
                  "offset": 34
                },
                {
                  "val": "1",
                  "offset": 42
                }
              ],
              "location": "PlannerDefs.setCacheSize(String,String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 113964,
              "status": "passed"
            },
            "line": 55,
            "name": "host1.example.com manufaturer has 1024 KB L2 cache",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 0
                },
                {
                  "val": "1024 KB",
                  "offset": 34
                },
                {
                  "val": "2",
                  "offset": 43
                }
              ],
              "location": "PlannerDefs.setCacheSize(String,String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 78030,
              "status": "passed"
            },
            "comments": [
              {
                "line": 56,
                "value": "#no cache at all, not good"
              }
            ],
            "line": 57,
            "name": "host2.example.com manufaturer has NO L1 cache",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 0
                },
                {
                  "val": "1",
                  "offset": 38
                }
              ],
              "location": "PlannerDefs.setNoCache(String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 78176,
              "status": "passed"
            },
            "line": 58,
            "name": "host2.example.com manufaturer has NO L2 cache",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 0
                },
                {
                  "val": "2",
                  "offset": 38
                }
              ],
              "location": "PlannerDefs.setNoCache(String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 43222,
              "status": "passed"
            },
            "line": 59,
            "name": "software installed on host host9.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host9.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 60
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 61
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 62
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 95558,
              "status": "passed"
            },
            "line": 63,
            "name": "software installed on host host1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 64
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 65
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 66
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 108313,
              "status": "passed"
            },
            "line": 67,
            "name": "software installed on host host2.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 68
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 69
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 70
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 49406,
              "status": "passed"
            },
            "line": 71,
            "name": "host host0.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host0.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 32046,
              "status": "passed"
            },
            "line": 72,
            "name": "host host1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29256,
              "status": "passed"
            },
            "line": 73,
            "name": "host host2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 141731,
              "status": "passed"
            },
            "line": 74,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 75
              },
              {
                "cells": [
                  "vm1",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 76
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 89894,
              "status": "passed"
            },
            "line": 77,
            "name": "VM vm1 requires 512 KB L1 cache",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "512 KB",
                  "offset": 16
                }
              ],
              "location": "PlannerDefs.setVmCacheRequirement(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2499627,
              "status": "passed"
            },
            "line": 78,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 470543,
              "status": "passed"
            },
            "line": 79,
            "name": "VM vm1 gets scheduled on host host1.example.com with kvm hypervisor",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "host1.example.com",
                  "offset": 30
                }
              ],
              "location": "PlannerDefs.verifyVmScheduledOnHostWithKvm(String,String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "support for host cpu cache-size expectation",
    "description": "",
    "id": "support-for-host-cpu-cache-size-expectation",
    "keyword": "Feature",
    "uri": "stories/general/planner/expectations/cpu-cachesize.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 1402723,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Start a virtual machine with cpu clockspeed expectation",
        "description": "",
        "id": "support-for-cpu-clock-speed-expectation;start-a-virtual-machine-with-cpu-clockspeed-expectation",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 267080,
              "status": "passed"
            },
            "line": 4,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distro",
                  "Distro Version"
                ],
                "line": 5
              },
              {
                "cells": [
                  "host1.example.com",
                  "6 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7"
                ],
                "line": 6
              },
              {
                "cells": [
                  "host2.example.com",
                  "6 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7"
                ],
                "line": 7
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 158613,
              "status": "passed"
            },
            "line": 8,
            "name": "host host1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 32
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 9
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 10
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 129303,
              "status": "passed"
            },
            "line": 11,
            "name": "host host2.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 32
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 12
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 13
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 115802,
              "status": "passed"
            },
            "line": 14,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 15
              },
              {
                "cells": [
                  "vm1",
                  "1 GB",
                  "1 GB",
                  "2",
                  "x86_64"
                ],
                "line": 16
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 248190,
              "status": "passed"
            },
            "line": 17,
            "name": "vm1 has cpu clock speed expectation 2000 Mhz",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 0
                },
                {
                  "val": "2000",
                  "offset": 36
                }
              ],
              "location": "PlannerDefs.addCpuClockSpeedExpectation(String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 111302,
              "status": "passed"
            },
            "line": 18,
            "name": "software installed on host host1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 19
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 20
              },
              {
                "cells": [
                  "libvirt",
                  "1.2.18"
                ],
                "line": 21
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 22
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 72728,
              "status": "passed"
            },
            "line": 23,
            "name": "software installed on host host2.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 24
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 25
              },
              {
                "cells": [
                  "libvirt",
                  "1.2.18"
                ],
                "line": 26
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 27
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 33289,
              "status": "passed"
            },
            "line": 28,
            "name": "host host1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 26222,
              "status": "passed"
            },
            "line": 29,
            "name": "host host2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 80260,
              "status": "passed"
            },
            "line": 30,
            "name": "host1.example.com cpu clockspeed is 1700 Mhz",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 0
                },
                {
                  "val": "1700",
                  "offset": 36
                }
              ],
              "location": "PlannerDefs.setHostCpuSpeed(String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 59461,
              "status": "passed"
            },
            "line": 31,
            "name": "host2.example.com cpu clockspeed is 2400 Mhz",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 0
                },
                {
                  "val": "2400",
                  "offset": 36
                }
              ],
              "location": "PlannerDefs.setHostCpuSpeed(String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2349656,
              "status": "passed"
            },
            "line": 32,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 369710,
              "status": "passed"
            },
            "line": 33,
            "name": "VM vm1 gets scheduled on host host2.example.com with kvm hypervisor",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "host2.example.com",
                  "offset": 30
                }
              ],
              "location": "PlannerDefs.verifyVmScheduledOnHostWithKvm(String,String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "support for cpu clock speed expectation",
    "description": "",
    "id": "support-for-cpu-clock-speed-expectation",
    "keyword": "Feature",
    "uri": "stories/general/planner/expectations/cpu-clockspeed.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 582202,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 3,
        "name": "host selection with manufacturer info",
        "description": "",
        "id": "support-for-host-manufacturer-expectation;host-selection-with-manufacturer-info",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 415438,
              "status": "passed"
            },
            "line": 4,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distro",
                  "Distro Version"
                ],
                "line": 5
              },
              {
                "cells": [
                  "host1.example.com",
                  "6 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7"
                ],
                "line": 6
              },
              {
                "cells": [
                  "host2.example.com",
                  "6 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7"
                ],
                "line": 7
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 194132,
              "status": "passed"
            },
            "line": 8,
            "name": "host host1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 32
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 9
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 10
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 97977,
              "status": "passed"
            },
            "line": 11,
            "name": "host host2.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 32
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 12
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 13
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 101662,
              "status": "passed"
            },
            "line": 14,
            "name": "host1.example.com manufaturer is awesomehardware",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 0
                },
                {
                  "val": "awesomehardware",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostManufacturer(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 37864,
              "status": "passed"
            },
            "line": 15,
            "name": "host2.example.com manufaturer is enterprisejunkyard",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 0
                },
                {
                  "val": "enterprisejunkyard",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostManufacturer(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29896,
              "status": "passed"
            },
            "line": 16,
            "name": "host host1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 44985,
              "status": "passed"
            },
            "line": 17,
            "name": "host host2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 70002,
              "status": "passed"
            },
            "line": 18,
            "name": "software installed on host host1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 19
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 20
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 21
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 53484,
              "status": "passed"
            },
            "line": 22,
            "name": "software installed on host host2.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 23
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 24
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 25
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 106966,
              "status": "passed"
            },
            "line": 26,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 27
              },
              {
                "cells": [
                  "vm1",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 176062,
              "status": "passed"
            },
            "line": 29,
            "name": "VM vm1 requires manufacturer enterprisejunkyard",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "enterprisejunkyard",
                  "offset": 29
                }
              ],
              "location": "PlannerDefs.setVmHostManufacturerInformation(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3335689,
              "status": "passed"
            },
            "line": 30,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 263995,
              "status": "passed"
            },
            "line": 31,
            "name": "VM vm1 gets scheduled on host host2.example.com with kvm hypervisor",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "host2.example.com",
                  "offset": 30
                }
              ],
              "location": "PlannerDefs.verifyVmScheduledOnHostWithKvm(String,String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "support for host manufacturer expectation",
    "description": "",
    "id": "support-for-host-manufacturer-expectation",
    "keyword": "Feature",
    "uri": "stories/general/planner/expectations/host-manufacturer.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 567733,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Start a virtual machine with notsame expectation on it",
        "description": "",
        "id": "support-not-same-host-expectation;start-a-virtual-machine-with-notsame-expectation-on-it",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 185906,
              "status": "passed"
            },
            "line": 4,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distro",
                  "Distro Version"
                ],
                "line": 5
              },
              {
                "cells": [
                  "host1.example.com",
                  "6 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7"
                ],
                "line": 6
              },
              {
                "cells": [
                  "host2.example.com",
                  "6 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7"
                ],
                "line": 7
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 106032,
              "status": "passed"
            },
            "line": 8,
            "name": "host host1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 32
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 9
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 10
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 117013,
              "status": "passed"
            },
            "line": 11,
            "name": "host host2.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 32
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 12
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 13
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 192311,
              "status": "passed"
            },
            "line": 14,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 15
              },
              {
                "cells": [
                  "vm1",
                  "1 GB",
                  "1 GB",
                  "2",
                  "x86_64"
                ],
                "line": 16
              },
              {
                "cells": [
                  "vm2",
                  "1 GB",
                  "1 GB",
                  "2",
                  "x86_64"
                ],
                "line": 17
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 135443,
              "status": "passed"
            },
            "line": 18,
            "name": "software installed on host host1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 19
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 20
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 21
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 130539,
              "status": "passed"
            },
            "line": 22,
            "name": "software installed on host host2.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 23
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 24
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 25
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 95576,
              "status": "passed"
            },
            "line": 26,
            "name": "host host1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 47188,
              "status": "passed"
            },
            "line": 27,
            "name": "host host2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 90659,
              "status": "passed"
            },
            "line": 28,
            "name": "vm2 is running on host2.example.com",
            "match": {
              "arguments": [
                {
                  "val": "vm2",
                  "offset": 0
                },
                {
                  "val": "host2.example.com",
                  "offset": 18
                }
              ],
              "location": "PlannerDefs.setVmRunningOnHost(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 282165,
              "status": "passed"
            },
            "line": 29,
            "name": "vm1 has notsame host expectation against vm2",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 0
                },
                {
                  "val": "vm2",
                  "offset": 41
                }
              ],
              "location": "PlannerDefs.addNotSameHostExpectation(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3957021,
              "status": "passed"
            },
            "line": 30,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 454502,
              "status": "passed"
            },
            "line": 31,
            "name": "VM vm1 gets scheduled on host host1.example.com with kvm hypervisor",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "host1.example.com",
                  "offset": 30
                }
              ],
              "location": "PlannerDefs.verifyVmScheduledOnHostWithKvm(String,String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 644368,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 34,
        "name": "the other vm must be migrated to another host to be able to start",
        "description": "",
        "id": "support-not-same-host-expectation;the-other-vm-must-be-migrated-to-another-host-to-be-able-to-start",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 320326,
              "status": "passed"
            },
            "line": 35,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distro",
                  "Distro Version"
                ],
                "line": 36
              },
              {
                "cells": [
                  "host-s.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7"
                ],
                "line": 37
              },
              {
                "cells": [
                  "host-b.example.com",
                  "4.5 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7"
                ],
                "line": 38
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 614328,
              "status": "passed"
            },
            "line": 39,
            "name": "host host-s.example.com CPUs are 2:",
            "match": {
              "arguments": [
                {
                  "val": "host-s.example.com",
                  "offset": 5
                },
                {
                  "val": "2",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 40
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 41
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 176113,
              "status": "passed"
            },
            "line": 42,
            "name": "host host-b.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-b.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 43
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 44
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 218192,
              "status": "passed"
            },
            "line": 45,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 46
              },
              {
                "cells": [
                  "vm-s",
                  "1 GB",
                  "1 GB",
                  "2",
                  "x86_64"
                ],
                "line": 47
              },
              {
                "cells": [
                  "vm-b",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 48
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 501554,
              "status": "passed"
            },
            "line": 49,
            "name": "software installed on host host-s.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-s.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 50
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 51
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 52
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 132544,
              "status": "passed"
            },
            "line": 53,
            "name": "software installed on host host-b.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-b.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 54
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 55
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 56
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 652550,
              "status": "passed"
            },
            "line": 57,
            "name": "host host-s.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-s.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 70003,
              "status": "passed"
            },
            "line": 58,
            "name": "host host-b.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-b.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 93523,
              "status": "passed"
            },
            "line": 59,
            "name": "vm-s is running on host-b.example.com",
            "match": {
              "arguments": [
                {
                  "val": "vm-s",
                  "offset": 0
                },
                {
                  "val": "host-b.example.com",
                  "offset": 19
                }
              ],
              "location": "PlannerDefs.setVmRunningOnHost(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 60751,
              "status": "passed"
            },
            "line": 60,
            "name": "vm-s has notsame host expectation against vm-b",
            "match": {
              "arguments": [
                {
                  "val": "vm-s",
                  "offset": 0
                },
                {
                  "val": "vm-b",
                  "offset": 42
                }
              ],
              "location": "PlannerDefs.addNotSameHostExpectation(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8920723,
              "status": "passed"
            },
            "line": 61,
            "name": "VM vm-b is started",
            "match": {
              "arguments": [
                {
                  "val": "vm-b",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 216527,
              "status": "passed"
            },
            "line": 62,
            "name": "vm-s will be migrated to host-s.example.com as step 1",
            "match": {
              "arguments": [
                {
                  "val": "vm-s",
                  "offset": 0
                },
                {
                  "val": "host-s.example.com",
                  "offset": 25
                },
                {
                  "val": "1",
                  "offset": 52
                }
              ],
              "location": "PlannerDefs.verifyVmMigration(String,String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 70423,
              "status": "passed"
            },
            "line": 63,
            "name": "VM vm-b gets scheduled on host host-b.example.com as step 2",
            "match": {
              "arguments": [
                {
                  "val": "vm-b",
                  "offset": 3
                },
                {
                  "val": "host-b.example.com",
                  "offset": 31
                },
                {
                  "val": "2",
                  "offset": 58
                }
              ],
              "location": "PlannerDefs.verifyVmGetsScheduledWithStepNumber(String,String,int)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "support not-same-host expectation",
    "description": "",
    "id": "support-not-same-host-expectation",
    "keyword": "Feature",
    "uri": "stories/general/planner/expectations/host-notsamehost.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 542053,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Start a virtual machine memory clock speed expectation on it",
        "description": "",
        "id": "support-for-memory-clock-speed-expectation;start-a-virtual-machine-memory-clock-speed-expectation-on-it",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 158143,
              "status": "passed"
            },
            "line": 4,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distro",
                  "Distro Version"
                ],
                "line": 5
              },
              {
                "cells": [
                  "host1.example.com",
                  "6 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7"
                ],
                "line": 6
              },
              {
                "cells": [
                  "host2.example.com",
                  "6 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7"
                ],
                "line": 7
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 114168,
              "status": "passed"
            },
            "line": 8,
            "name": "host host1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 32
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 9
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 10
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 86221,
              "status": "passed"
            },
            "line": 11,
            "name": "host host2.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 32
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 12
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 13
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 214797,
              "status": "passed"
            },
            "line": 14,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 15
              },
              {
                "cells": [
                  "vm1",
                  "1 GB",
                  "1 GB",
                  "2",
                  "x86_64"
                ],
                "line": 16
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 203837,
              "status": "passed"
            },
            "line": 17,
            "name": "vm1 has memory clock speed expectation 1700 Mhz",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 0
                },
                {
                  "val": "1700",
                  "offset": 39
                }
              ],
              "location": "PlannerDefs.addVmMemoryClockSpeedExpectation(String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 71456,
              "status": "passed"
            },
            "line": 18,
            "name": "software installed on host host1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 19
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 20
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 21
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 57901,
              "status": "passed"
            },
            "line": 22,
            "name": "software installed on host host2.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 23
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 24
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 25
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 26551,
              "status": "passed"
            },
            "line": 26,
            "name": "host host1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23876,
              "status": "passed"
            },
            "line": 27,
            "name": "host host2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 392885,
              "status": "passed"
            },
            "line": 28,
            "name": "host1.example.com memory clockspeed is 1300 Mhz",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 0
                },
                {
                  "val": "1300",
                  "offset": 39
                }
              ],
              "location": "PlannerDefs.setHostMemoryClockSpeed(String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 68874,
              "status": "passed"
            },
            "line": 29,
            "name": "host2.example.com memory clockspeed is 2300 Mhz",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 0
                },
                {
                  "val": "2300",
                  "offset": 39
                }
              ],
              "location": "PlannerDefs.setHostMemoryClockSpeed(String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2173513,
              "status": "passed"
            },
            "line": 30,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 460294,
              "status": "passed"
            },
            "line": 31,
            "name": "VM vm1 gets scheduled on host host2.example.com with kvm hypervisor",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "host2.example.com",
                  "offset": 30
                }
              ],
              "location": "PlannerDefs.verifyVmScheduledOnHostWithKvm(String,String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 1085511,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 33,
        "name": "Start a virtual machine memory clock speed expectation on it, some host does not have known mem clock freq",
        "description": "",
        "id": "support-for-memory-clock-speed-expectation;start-a-virtual-machine-memory-clock-speed-expectation-on-it,-some-host-does-not-have-known-mem-clock-freq",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 209053,
              "status": "passed"
            },
            "line": 34,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distro",
                  "Distro Version"
                ],
                "line": 35
              },
              {
                "cells": [
                  "host1.example.com",
                  "6 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7"
                ],
                "line": 36
              },
              {
                "cells": [
                  "host2.example.com",
                  "6 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7"
                ],
                "line": 37
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 120454,
              "status": "passed"
            },
            "line": 38,
            "name": "host host1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 32
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 39
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 40
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 105425,
              "status": "passed"
            },
            "line": 41,
            "name": "host host2.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 32
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 42
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 43
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 121108,
              "status": "passed"
            },
            "line": 44,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 45
              },
              {
                "cells": [
                  "vm1",
                  "1 GB",
                  "1 GB",
                  "2",
                  "x86_64"
                ],
                "line": 46
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 148267,
              "status": "passed"
            },
            "line": 47,
            "name": "vm1 has memory clock speed expectation 1700 Mhz",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 0
                },
                {
                  "val": "1700",
                  "offset": 39
                }
              ],
              "location": "PlannerDefs.addVmMemoryClockSpeedExpectation(String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 99254,
              "status": "passed"
            },
            "line": 48,
            "name": "software installed on host host1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 49
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 50
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 51
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 95704,
              "status": "passed"
            },
            "line": 52,
            "name": "software installed on host host2.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 53
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 54
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 55
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 45516,
              "status": "passed"
            },
            "line": 56,
            "name": "host host1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 34179,
              "status": "passed"
            },
            "line": 57,
            "name": "host host2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 51625,
              "status": "passed"
            },
            "line": 58,
            "name": "host1.example.com memory information is not known",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 0
                }
              ],
              "location": "PlannerDefs.clearHostMemoryInformation(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 98703,
              "status": "passed"
            },
            "line": 59,
            "name": "host2.example.com memory clockspeed is 2300 Mhz",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 0
                },
                {
                  "val": "2300",
                  "offset": 39
                }
              ],
              "location": "PlannerDefs.setHostMemoryClockSpeed(String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1919555,
              "status": "passed"
            },
            "line": 60,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 227627,
              "status": "passed"
            },
            "line": 61,
            "name": "VM vm1 gets scheduled on host host2.example.com with kvm hypervisor",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "host2.example.com",
                  "offset": 30
                }
              ],
              "location": "PlannerDefs.verifyVmScheduledOnHostWithKvm(String,String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "support for memory clock speed expectation",
    "description": "",
    "id": "support-for-memory-clock-speed-expectation",
    "keyword": "Feature",
    "uri": "stories/general/planner/expectations/memory-clockspeed.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 524954,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 3,
        "name": "When a not-same-storage virtual disk is allocated on host, allocate storage on another host",
        "description": "",
        "id": "support-for-not-same-storage-expectation;when-a-not-same-storage-virtual-disk-is-allocated-on-host,-allocate-storage-on-another-host",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 201232,
              "status": "passed"
            },
            "line": 4,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distro",
                  "Distro Version"
                ],
                "line": 5
              },
              {
                "cells": [
                  "host1.example.com",
                  "8 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7"
                ],
                "line": 6
              },
              {
                "cells": [
                  "host2.example.com",
                  "8 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7"
                ],
                "line": 7
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 136706,
              "status": "passed"
            },
            "line": 8,
            "name": "host host1.example.com filesystem is:",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostFilesystemCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mount point",
                  "size",
                  "free",
                  "fstype"
                ],
                "line": 9
              },
              {
                "cells": [
                  "/var",
                  "128 GB",
                  "128 GB",
                  "ext4"
                ],
                "line": 10
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 86808,
              "status": "passed"
            },
            "line": 11,
            "name": "host host2.example.com filesystem is:",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostFilesystemCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mount point",
                  "size",
                  "free",
                  "fstype"
                ],
                "line": 12
              },
              {
                "cells": [
                  "/var",
                  "128 GB",
                  "128 GB",
                  "ext4"
                ],
                "line": 13
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 66017,
              "status": "passed"
            },
            "line": 14,
            "name": "Controller config filesystem type \u0027ext4\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "ext4",
                  "offset": 35
                },
                {
                  "val": "enabled",
                  "offset": 44
                }
              ],
              "location": "PlannerDefs.setConfigurationFsType(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 35570,
              "status": "passed"
            },
            "line": 15,
            "name": "Controller config enabled storage mounts are",
            "match": {
              "location": "PlannerDefs.setConfigurationFsType(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mount"
                ],
                "line": 16
              },
              {
                "cells": [
                  "/var"
                ],
                "line": 17
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 119380,
              "status": "passed"
            },
            "line": 18,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 19
              },
              {
                "cells": [
                  "vm1-disk",
                  "2 GB",
                  "false"
                ],
                "line": 20
              },
              {
                "cells": [
                  "vm2-disk",
                  "2 GB",
                  "false"
                ],
                "line": 21
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 45728,
              "status": "passed"
            },
            "line": 22,
            "name": "vm1-disk is not yet created",
            "match": {
              "arguments": [
                {
                  "val": "vm1-disk",
                  "offset": 0
                }
              ],
              "location": "PlannerDefs.removeVStorageDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 649324,
              "status": "passed"
            },
            "line": 23,
            "name": "the virtual disk vm2-disk is created on host2.example.com",
            "match": {
              "arguments": [
                {
                  "val": "vm2-disk",
                  "offset": 17
                },
                {
                  "val": "host2.example.com",
                  "offset": 40
                }
              ],
              "location": "PlannerDefs.createVStorageDynOld(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 101918,
              "status": "passed"
            },
            "line": 24,
            "name": "software installed on host host1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 25
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 26
              },
              {
                "cells": [
                  "libvirt",
                  "1.2.18"
                ],
                "line": 27
              },
              {
                "cells": [
                  "qemu-img",
                  "2.4.1"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 62542,
              "status": "passed"
            },
            "line": 29,
            "name": "software installed on host host2.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 30
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 31
              },
              {
                "cells": [
                  "libvirt",
                  "1.2.18"
                ],
                "line": 32
              },
              {
                "cells": [
                  "qemu-img",
                  "2.4.1"
                ],
                "line": 33
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 28875,
              "status": "passed"
            },
            "line": 34,
            "name": "host host1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21682,
              "status": "passed"
            },
            "line": 35,
            "name": "host host2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 187777,
              "status": "passed"
            },
            "line": 36,
            "name": "virtual disk vm1-disk has not-same-storage expectation against vm2-disk",
            "match": {
              "arguments": [
                {
                  "val": "vm1-disk",
                  "offset": 13
                },
                {
                  "val": "vm2-disk",
                  "offset": 63
                }
              ],
              "location": "PlannerDefs.addNotSameStorageExpectation(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6368560,
              "status": "passed"
            },
            "line": 37,
            "name": "virtual disk vm1-disk gets an availability expectation",
            "match": {
              "arguments": [
                {
                  "val": "vm1-disk",
                  "offset": 13
                }
              ],
              "location": "PlannerDefs.createVirtualStorageAvailabilityExpectation(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 100154,
              "status": "passed"
            },
            "line": 38,
            "name": "the virtual disk vm1-disk must be allocated on host1.example.com under /var",
            "match": {
              "arguments": [
                {
                  "val": "vm1-disk",
                  "offset": 17
                },
                {
                  "val": "host1.example.com",
                  "offset": 47
                },
                {
                  "val": "/var",
                  "offset": 71
                }
              ],
              "location": "PlannerDefs.verifyVirtualStorageCreatedOnFs(String,String,String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "support for not-same-storage expectation",
    "description": "",
    "id": "support-for-not-same-storage-expectation",
    "keyword": "Feature",
    "uri": "stories/general/planner/expectations/storage-notsame.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "comments": [
          {
            "line": 3,
            "value": "# this is a tricky scenario, because there is no explicit \u0027migrate command\u0027"
          },
          {
            "line": 4,
            "value": "# therefore the trick here is that there are two VM\u0027s running on host1"
          },
          {
            "line": 5,
            "value": "# the third VM for a reason (memory need) can only be started on host1."
          },
          {
            "line": 6,
            "value": "# in this case one of the two running VM\u0027s must be selected for migration"
          },
          {
            "line": 7,
            "value": "# and what the test verifies here is that the one without no-migrate"
          },
          {
            "line": 8,
            "value": "# expectation was selected"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 504227,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 9,
        "name": "vm without \"No migration\" expectation is preferred when selecting for migration",
        "description": "",
        "id": "\"no-migration\"-expectation;vm-without-\"no-migration\"-expectation-is-preferred-when-selecting-for-migration",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 191721,
              "status": "passed"
            },
            "line": 10,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distro",
                  "Distro Version"
                ],
                "line": 11
              },
              {
                "cells": [
                  "host-big.example.com",
                  "6 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7"
                ],
                "line": 12
              },
              {
                "cells": [
                  "host-small.example.com",
                  "3 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7"
                ],
                "line": 13
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 260070,
              "status": "passed"
            },
            "line": 14,
            "name": "host host-big.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-big.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 35
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 15
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 16
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 79532,
              "status": "passed"
            },
            "line": 17,
            "name": "host host-small.example.com CPUs are 1:",
            "match": {
              "arguments": [
                {
                  "val": "host-small.example.com",
                  "offset": 5
                },
                {
                  "val": "1",
                  "offset": 37
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 18
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 19
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 254638,
              "status": "passed"
            },
            "line": 20,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 21
              },
              {
                "cells": [
                  "vm-sticky",
                  "2 GB",
                  "2 GB",
                  "1",
                  "x86_64"
                ],
                "line": 22
              },
              {
                "cells": [
                  "vm-free",
                  "2 GB",
                  "2 GB",
                  "1",
                  "x86_64"
                ],
                "line": 23
              },
              {
                "cells": [
                  "vm-fat",
                  "4 GB",
                  "4 GB",
                  "1",
                  "x86_64"
                ],
                "line": 24
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 100780,
              "status": "passed"
            },
            "line": 25,
            "name": "software installed on host host-big.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-big.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 26
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 27
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 95962,
              "status": "passed"
            },
            "line": 29,
            "name": "software installed on host host-small.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-small.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 30
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 31
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 32
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29460,
              "status": "passed"
            },
            "line": 33,
            "name": "host host-big.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-big.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23788,
              "status": "passed"
            },
            "line": 34,
            "name": "host host-small.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-small.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 58162,
              "status": "passed"
            },
            "line": 35,
            "name": "vm-sticky is running on host-big.example.com",
            "match": {
              "arguments": [
                {
                  "val": "vm-sticky",
                  "offset": 0
                },
                {
                  "val": "host-big.example.com",
                  "offset": 24
                }
              ],
              "location": "PlannerDefs.setVmRunningOnHost(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 52381,
              "status": "passed"
            },
            "line": 36,
            "name": "vm-free is running on host-big.example.com",
            "match": {
              "arguments": [
                {
                  "val": "vm-free",
                  "offset": 0
                },
                {
                  "val": "host-big.example.com",
                  "offset": 22
                }
              ],
              "location": "PlannerDefs.setVmRunningOnHost(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 165624,
              "status": "passed"
            },
            "line": 37,
            "name": "vm-sticky has no-migrate expectation",
            "match": {
              "arguments": [
                {
                  "val": "vm-sticky",
                  "offset": 0
                }
              ],
              "location": "PlannerDefs.addNoMigrateExpectation(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7539171,
              "status": "passed"
            },
            "line": 38,
            "name": "VM vm-fat is started",
            "match": {
              "arguments": [
                {
                  "val": "vm-fat",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 92713,
              "status": "passed"
            },
            "line": 39,
            "name": "vm-free will be migrated to host-small.example.com as step 1",
            "match": {
              "arguments": [
                {
                  "val": "vm-free",
                  "offset": 0
                },
                {
                  "val": "host-small.example.com",
                  "offset": 28
                },
                {
                  "val": "1",
                  "offset": 59
                }
              ],
              "location": "PlannerDefs.verifyVmMigration(String,String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 40420,
              "status": "passed"
            },
            "line": 40,
            "name": "VM vm-fat gets scheduled on host host-big.example.com as step 2",
            "match": {
              "arguments": [
                {
                  "val": "vm-fat",
                  "offset": 3
                },
                {
                  "val": "host-big.example.com",
                  "offset": 33
                },
                {
                  "val": "2",
                  "offset": 62
                }
              ],
              "location": "PlannerDefs.verifyVmGetsScheduledWithStepNumber(String,String,int)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "\"No migration\" expectation",
    "description": "",
    "id": "\"no-migration\"-expectation",
    "keyword": "Feature",
    "uri": "stories/general/planner/expectations/vm-nomigration.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 768055,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 3,
        "name": "LVM PV fails - no workload, plenty of free capacity - we just drop it",
        "description": "",
        "id": "action-taken-on-physical-storage-device-signaling-failure;lvm-pv-fails---no-workload,-plenty-of-free-capacity---we-just-drop-it",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 175181,
              "status": "passed"
            },
            "line": 4,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Distro Version"
                ],
                "line": 5
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7.1"
                ],
                "line": 6
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 48377,
              "status": "passed"
            },
            "line": 7,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 561765,
              "status": "passed"
            },
            "line": 8,
            "name": "host host-1.example.com volume groups are:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostLvmCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "vg",
                  "size",
                  "devices"
                ],
                "line": 9
              },
              {
                "cells": [
                  "kerub",
                  "3 TB",
                  "/dev/sda: 1 TB, /dev/sdb: 1 TB, /dev/sdc: 1 TB"
                ],
                "line": 10
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3142058,
              "status": "passed"
            },
            "line": 11,
            "name": "disk /dev/sda in host host-1.example.com signals failure",
            "match": {
              "arguments": [
                {
                  "val": "/dev/sda",
                  "offset": 5
                },
                {
                  "val": "host-1.example.com",
                  "offset": 22
                }
              ],
              "location": "PlannerDefs.setDiskFailing(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 270998,
              "status": "passed"
            },
            "line": 12,
            "name": "disk /dev/sda in host host-1.example.com will be removed from VG kerub as step 1",
            "match": {
              "arguments": [
                {
                  "val": "/dev/sda",
                  "offset": 5
                },
                {
                  "val": "host-1.example.com",
                  "offset": 22
                },
                {
                  "val": "kerub",
                  "offset": 65
                },
                {
                  "val": "1",
                  "offset": 79
                }
              ],
              "location": "PlannerDefs.verifyPVRemove(String,String,String,int)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Action taken on physical storage device signaling failure",
    "description": "",
    "id": "action-taken-on-physical-storage-device-signaling-failure",
    "keyword": "Feature",
    "uri": "stories/general/planner/hardware/storage-smart-failure.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 607651,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Start a VM with two hosts, one of these is being recycled",
        "description": "",
        "id": "removing-a-host;start-a-vm-with-two-hosts,-one-of-these-is-being-recycled",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 131715,
              "status": "passed"
            },
            "line": 4,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 5
              },
              {
                "cells": [
                  "vm1",
                  "1GB",
                  "4GB",
                  "2",
                  "x86_64"
                ],
                "line": 6
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 123466,
              "status": "passed"
            },
            "line": 7,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distro",
                  "Distro version"
                ],
                "line": 8
              },
              {
                "cells": [
                  "diebastard.example.com",
                  "2GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Ubuntu",
                  "14.0.4"
                ],
                "line": 9
              },
              {
                "cells": [
                  "stayalive.example.com",
                  "2GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Ubuntu",
                  "14.0.4"
                ],
                "line": 10
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 37444,
              "status": "passed"
            },
            "line": 11,
            "name": "host diebastard.example.com is scheduled for recycling",
            "match": {
              "arguments": [
                {
                  "val": "diebastard.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHoostRecycle(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 94054,
              "status": "passed"
            },
            "line": 12,
            "name": "software installed on host stayalive.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "stayalive.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 13
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 14
              },
              {
                "cells": [
                  "libvirt-bin",
                  "1.2.18"
                ],
                "line": 15
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 88811,
              "status": "passed"
            },
            "line": 16,
            "name": "host stayalive.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "stayalive.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 36
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 17
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 18
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23803,
              "status": "passed"
            },
            "line": 19,
            "name": "host stayalive.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "stayalive.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 50771,
              "status": "passed"
            },
            "comments": [
              {
                "line": 20,
                "value": "#exactly like stayalive.example.com"
              }
            ],
            "line": 21,
            "name": "software installed on host diebastard.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "diebastard.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 22
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 23
              },
              {
                "cells": [
                  "libvirt-bin",
                  "1.2.18"
                ],
                "line": 24
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 76605,
              "status": "passed"
            },
            "line": 25,
            "name": "host diebastard.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "diebastard.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 37
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 26
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 27
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22102,
              "status": "passed"
            },
            "line": 28,
            "name": "host diebastard.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "diebastard.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13681439,
              "status": "passed"
            },
            "line": 30,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 367648,
              "status": "passed"
            },
            "line": 31,
            "name": "VM vm1 gets scheduled on host stayalive.example.com with kvm hypervisor",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "stayalive.example.com",
                  "offset": 30
                }
              ],
              "location": "PlannerDefs.verifyVmScheduledOnHostWithKvm(String,String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 32,
            "value": "#and not on diebastard.example.com, that is the point"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 540600,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 34,
        "name": "Recycling a dedicated host",
        "description": "",
        "id": "removing-a-host;recycling-a-dedicated-host",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 161710,
              "status": "passed"
            },
            "line": 35,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distro",
                  "Distro version"
                ],
                "line": 36
              },
              {
                "cells": [
                  "diebastard.example.com",
                  "2GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Ubuntu",
                  "14.0.4"
                ],
                "line": 37
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 47083,
              "status": "passed"
            },
            "line": 38,
            "name": "host diebastard.example.com is dedicated",
            "match": {
              "arguments": [
                {
                  "val": "diebastard.example.com",
                  "offset": 5
                },
                {}
              ],
              "location": "PlannerDefs.setDedicated(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20573,
              "status": "passed"
            },
            "line": 39,
            "name": "host diebastard.example.com is scheduled for recycling",
            "match": {
              "arguments": [
                {
                  "val": "diebastard.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHoostRecycle(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19483,
              "status": "passed"
            },
            "line": 40,
            "name": "host diebastard.example.com is Down",
            "match": {
              "arguments": [
                {
                  "val": "diebastard.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDown(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1038784,
              "status": "passed"
            },
            "line": 41,
            "name": "planner starts",
            "match": {
              "location": "PlannerDefs.kickPlanner()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 50890,
              "status": "passed"
            },
            "line": 42,
            "name": "host diebastard.example.com will be recycled",
            "match": {
              "arguments": [
                {
                  "val": "diebastard.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.verifyHostRecycle(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 41094,
              "status": "passed"
            },
            "comments": [
              {
                "line": 43,
                "value": "#obviously, since it is already powered down"
              }
            ],
            "line": 44,
            "name": "host diebastard.example.com will not be powered down",
            "match": {
              "arguments": [
                {
                  "val": "diebastard.example.com",
                  "offset": 5
                },
                {
                  "val": "not ",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.verifyHostPowerDown(String,String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 1137664,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 46,
        "name": "Recycling a not dedicated host",
        "description": "",
        "id": "removing-a-host;recycling-a-not-dedicated-host",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 382415,
              "status": "passed"
            },
            "line": 47,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distro",
                  "Distro version"
                ],
                "line": 48
              },
              {
                "cells": [
                  "diebastard.example.com",
                  "2GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Ubuntu",
                  "14.0.4"
                ],
                "line": 49
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 62033,
              "status": "passed"
            },
            "line": 50,
            "name": "host diebastard.example.com is not dedicated",
            "match": {
              "arguments": [
                {
                  "val": "diebastard.example.com",
                  "offset": 5
                },
                {
                  "val": "not ",
                  "offset": 31
                }
              ],
              "location": "PlannerDefs.setDedicated(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20100,
              "status": "passed"
            },
            "line": 51,
            "name": "host diebastard.example.com is scheduled for recycling",
            "match": {
              "arguments": [
                {
                  "val": "diebastard.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHoostRecycle(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 41717,
              "status": "passed"
            },
            "line": 52,
            "name": "host diebastard.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "diebastard.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1430499,
              "status": "passed"
            },
            "line": 53,
            "name": "planner starts",
            "match": {
              "location": "PlannerDefs.kickPlanner()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 35034,
              "status": "passed"
            },
            "line": 54,
            "name": "host diebastard.example.com will be recycled",
            "match": {
              "arguments": [
                {
                  "val": "diebastard.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.verifyHostRecycle(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 28938,
              "status": "passed"
            },
            "line": 55,
            "name": "host diebastard.example.com will not be powered down",
            "match": {
              "arguments": [
                {
                  "val": "diebastard.example.com",
                  "offset": 5
                },
                {
                  "val": "not ",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.verifyHostPowerDown(String,String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 819744,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 57,
        "name": "Recycling a host that has read-only images on its storage",
        "description": "",
        "id": "removing-a-host;recycling-a-host-that-has-read-only-images-on-its-storage",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 210225,
              "status": "passed"
            },
            "line": 58,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distro",
                  "Distro version"
                ],
                "line": 59
              },
              {
                "cells": [
                  "diebastard.example.com",
                  "2GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Ubuntu",
                  "14.0.4"
                ],
                "line": 60
              },
              {
                "cells": [
                  "longlive.example.com",
                  "2GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Ubuntu",
                  "14.0.4"
                ],
                "line": 61
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 36714,
              "status": "passed"
            },
            "line": 62,
            "name": "host diebastard.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "diebastard.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 37698,
              "status": "passed"
            },
            "line": 63,
            "name": "host longlive.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "longlive.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 268188,
              "status": "passed"
            },
            "line": 64,
            "name": "host diebastard.example.com volume groups are:",
            "match": {
              "arguments": [
                {
                  "val": "diebastard.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostLvmCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "vg name",
                  "size",
                  "pvs"
                ],
                "line": 65
              },
              {
                "cells": [
                  "vg-1",
                  "512 GB",
                  "/dev/sda: 128 GB, /dev/sdb: 128 GB, /dev/sdc: 128 GB, /dev/sdd: 128 GB"
                ],
                "line": 66
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 243055,
              "status": "passed"
            },
            "line": 67,
            "name": "host longlive.example.com volume groups are:",
            "match": {
              "arguments": [
                {
                  "val": "longlive.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostLvmCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "vg name",
                  "size",
                  "pvs"
                ],
                "line": 68
              },
              {
                "cells": [
                  "vg-1",
                  "512 GB",
                  "/dev/sda: 128 GB, /dev/sdb: 128 GB, /dev/sdc: 128 GB, /dev/sdd: 128 GB"
                ],
                "line": 69
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 91984,
              "status": "passed"
            },
            "line": 70,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 71
              },
              {
                "cells": [
                  "system-disk-1",
                  "2 GB",
                  "true"
                ],
                "line": 72
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 109502,
              "status": "passed"
            },
            "line": 73,
            "name": "system-disk-1 is allocated on host diebastard.example.com volume group vg-1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "diebastard.example.com",
                  "offset": 35
                },
                {
                  "val": "vg-1",
                  "offset": 71
                }
              ],
              "location": "PlannerDefs.createLvmAllocation(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 31514,
              "status": "passed"
            },
            "line": 74,
            "name": "host diebastard.example.com is scheduled for recycling",
            "match": {
              "arguments": [
                {
                  "val": "diebastard.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHoostRecycle(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 35241160,
              "status": "passed"
            },
            "line": 75,
            "name": "planner starts",
            "match": {
              "location": "PlannerDefs.kickPlanner()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 307207,
              "status": "passed"
            },
            "line": 76,
            "name": "host ssh key must be generated on diebastard.example.com as step 1",
            "match": {
              "arguments": [
                {
                  "val": "diebastard.example.com",
                  "offset": 34
                },
                {
                  "val": "1",
                  "offset": 65
                }
              ],
              "location": "PlannerDefs.verifyHostSshGeneration(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 324232,
              "status": "passed"
            },
            "line": 77,
            "name": "host ssh key of diebastard.example.com must be installed on longlive.example.com as step 3",
            "match": {
              "arguments": [
                {
                  "val": "diebastard.example.com",
                  "offset": 16
                },
                {
                  "val": "longlive.example.com",
                  "offset": 60
                },
                {
                  "val": "3",
                  "offset": 89
                }
              ],
              "location": "PlannerDefs.verifyHostSShKeyInstall(String,String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 238639,
              "status": "passed"
            },
            "line": 78,
            "name": "the virtual disk system-disk-1 must be duplicated to longlive.example.com under volume group vg-1 as step 4",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 17
                },
                {
                  "val": "longlive.example.com",
                  "offset": 53
                },
                {
                  "val": "vg-1",
                  "offset": 93
                },
                {
                  "val": "4",
                  "offset": 106
                }
              ],
              "location": "PlannerDefs.verifyDiskDuplicatedLvm(String,String,String,int)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "removing a host",
    "description": "",
    "id": "removing-a-host",
    "keyword": "Feature",
    "uri": "stories/general/planner/host-removal.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 1740490,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Start a VM with single host with kvm",
        "description": "",
        "id": "basic-planner-features;start-a-vm-with-single-host-with-kvm",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 124156,
              "status": "passed"
            },
            "line": 4,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 5
              },
              {
                "cells": [
                  "vm1",
                  "1GB",
                  "4GB",
                  "2",
                  "x86_64"
                ],
                "line": 6
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1689061,
              "status": "passed"
            },
            "line": 7,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distro",
                  "Distro version"
                ],
                "line": 8
              },
              {
                "cells": [
                  "127.0.0.5",
                  "2GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Ubuntu",
                  "14.0.4"
                ],
                "line": 9
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 91922,
              "status": "passed"
            },
            "line": 10,
            "name": "software installed on host 127.0.0.5:",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.5",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 11
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 12
              },
              {
                "cells": [
                  "libvirt",
                  "1.2.18"
                ],
                "line": 13
              },
              {
                "cells": [
                  "libvirt-bin",
                  "1.2.18"
                ],
                "line": 14
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 92484,
              "status": "passed"
            },
            "line": 15,
            "name": "host 127.0.0.5 CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.5",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 24
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 16
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 17
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 27280,
              "status": "passed"
            },
            "line": 18,
            "name": "host 127.0.0.5 is Up",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.5",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5205936,
              "status": "passed"
            },
            "line": 19,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 196709,
              "status": "passed"
            },
            "line": 20,
            "name": "VM vm1 gets scheduled on host 127.0.0.5 with kvm hypervisor",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "127.0.0.5",
                  "offset": 30
                }
              ],
              "location": "PlannerDefs.verifyVmScheduledOnHostWithKvm(String,String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 821815,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 22,
        "name": "Start a VM with single host with virtualbox",
        "description": "",
        "id": "basic-planner-features;start-a-vm-with-single-host-with-virtualbox",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 167338,
              "status": "passed"
            },
            "line": 23,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 24
              },
              {
                "cells": [
                  "vm1",
                  "1GB",
                  "4GB",
                  "2",
                  "x86_64"
                ],
                "line": 25
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 125659,
              "status": "passed"
            },
            "line": 26,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distro",
                  "Distro version"
                ],
                "line": 27
              },
              {
                "cells": [
                  "127.0.0.5",
                  "2GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Ubuntu",
                  "14.0.4"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 68868,
              "status": "passed"
            },
            "line": 29,
            "name": "software installed on host 127.0.0.5:",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.5",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 30
              },
              {
                "cells": [
                  "VirtualBox",
                  "2.4.1"
                ],
                "line": 31
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 27779,
              "status": "passed"
            },
            "line": 32,
            "name": "host 127.0.0.5 is Up",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.5",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 102623,
              "status": "passed"
            },
            "line": 33,
            "name": "host 127.0.0.5 CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.5",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 24
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 34
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 35
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6950244,
              "status": "passed"
            },
            "line": 36,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 62359,
              "status": "passed"
            },
            "line": 37,
            "name": "VM vm1 gets scheduled on host 127.0.0.5 with virtualbox hypervisor",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "127.0.0.5",
                  "offset": 30
                }
              ],
              "location": "PlannerDefs.verifyVmScheduledOnHostWithVirtualBox(String,String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 509484,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 39,
        "name": "Start a VM with two hosts, one of them is does not match required architecture",
        "description": "",
        "id": "basic-planner-features;start-a-vm-with-two-hosts,-one-of-them-is-does-not-match-required-architecture",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 163260,
              "status": "passed"
            },
            "line": 40,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 41
              },
              {
                "cells": [
                  "vm1",
                  "1GB",
                  "2GB",
                  "2",
                  "x86_64"
                ],
                "line": 42
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 231995,
              "status": "passed"
            },
            "line": 43,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distro",
                  "Distro version"
                ],
                "line": 44
              },
              {
                "cells": [
                  "127.0.0.5",
                  "2GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Ubuntu",
                  "14.0.4"
                ],
                "line": 45
              },
              {
                "cells": [
                  "127.0.0.6",
                  "2GB",
                  "2",
                  "2",
                  "ARM",
                  "Linux",
                  "Ubuntu",
                  "14.0.4"
                ],
                "line": 46
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 163362,
              "status": "passed"
            },
            "line": 47,
            "name": "software installed on host 127.0.0.5:",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.5",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 48
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 49
              },
              {
                "cells": [
                  "libvirt",
                  "1.2.18"
                ],
                "line": 50
              },
              {
                "cells": [
                  "libvirt-bin",
                  "1.2.18"
                ],
                "line": 51
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 100097,
              "status": "passed"
            },
            "line": 52,
            "name": "software installed on host 127.0.0.6:",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.6",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 53
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 54
              },
              {
                "cells": [
                  "libvirt",
                  "1.2.18"
                ],
                "line": 55
              },
              {
                "cells": [
                  "libvirt-bin",
                  "1.2.18"
                ],
                "line": 56
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 131420,
              "status": "passed"
            },
            "line": 57,
            "name": "host 127.0.0.5 CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.5",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 24
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 58
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 59
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 116950,
              "status": "passed"
            },
            "line": 60,
            "name": "host 127.0.0.6 CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.6",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 24
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 61
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 62
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 44437,
              "status": "passed"
            },
            "line": 63,
            "name": "host 127.0.0.5 is Up",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.5",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 36238,
              "status": "passed"
            },
            "line": 64,
            "name": "host 127.0.0.6 is Up",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.6",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2583618,
              "status": "passed"
            },
            "line": 65,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 341578,
              "status": "passed"
            },
            "line": 66,
            "name": "VM vm1 gets scheduled on host 127.0.0.5 with kvm hypervisor",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "127.0.0.5",
                  "offset": 30
                }
              ],
              "location": "PlannerDefs.verifyVmScheduledOnHostWithKvm(String,String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 668408,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 68,
        "name": "Start a VM with two hosts, one of them is does not match required amount of cores",
        "description": "",
        "id": "basic-planner-features;start-a-vm-with-two-hosts,-one-of-them-is-does-not-match-required-amount-of-cores",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 588782,
              "status": "passed"
            },
            "line": 69,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 70
              },
              {
                "cells": [
                  "vm1",
                  "1 GB",
                  "2 GB",
                  "2",
                  "x86_64"
                ],
                "line": 71
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 158308,
              "status": "passed"
            },
            "line": 72,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Dist Version"
                ],
                "line": 73
              },
              {
                "cells": [
                  "127.0.0.5",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Fedora",
                  "23"
                ],
                "line": 74
              },
              {
                "cells": [
                  "127.0.0.6",
                  "2 GB",
                  "1",
                  "2",
                  "x86_64",
                  "Linux",
                  "Fedora",
                  "23"
                ],
                "line": 75
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 91683,
              "status": "passed"
            },
            "line": 76,
            "name": "software installed on host 127.0.0.5:",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.5",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 77
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 78
              },
              {
                "cells": [
                  "libvirt",
                  "1.2.18"
                ],
                "line": 79
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 80
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 60929,
              "status": "passed"
            },
            "line": 81,
            "name": "software installed on host 127.0.0.6:",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.6",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 82
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 83
              },
              {
                "cells": [
                  "libvirt",
                  "1.2.18"
                ],
                "line": 84
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 85
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 91677,
              "status": "passed"
            },
            "line": 86,
            "name": "host 127.0.0.5 CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.5",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 24
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 87
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 88
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 88706,
              "status": "passed"
            },
            "line": 89,
            "name": "host 127.0.0.6 CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.6",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 24
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 90
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 91
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 42662,
              "status": "passed"
            },
            "line": 92,
            "name": "host 127.0.0.5 is Up",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.5",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 37744,
              "status": "passed"
            },
            "line": 93,
            "name": "host 127.0.0.6 is Up",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.6",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9583221,
              "status": "passed"
            },
            "line": 94,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 374257,
              "status": "passed"
            },
            "line": 95,
            "name": "VM vm1 gets scheduled on host 127.0.0.5 with kvm hypervisor",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "127.0.0.5",
                  "offset": 30
                }
              ],
              "location": "PlannerDefs.verifyVmScheduledOnHostWithKvm(String,String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 515439,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 97,
        "name": "Start a VM with two hosts, one of them is does not match required amount of RAM",
        "description": "",
        "id": "basic-planner-features;start-a-vm-with-two-hosts,-one-of-them-is-does-not-match-required-amount-of-ram",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 138034,
              "status": "passed"
            },
            "line": 98,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 99
              },
              {
                "cells": [
                  "vm1",
                  "2 GB",
                  "2 GB",
                  "2",
                  "x86_64"
                ],
                "line": 100
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 155167,
              "status": "passed"
            },
            "line": 101,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distro",
                  "Distro version"
                ],
                "line": 102
              },
              {
                "cells": [
                  "127.0.0.5",
                  "4 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Ubuntu",
                  "14.0.4"
                ],
                "line": 103
              },
              {
                "cells": [
                  "127.0.0.6",
                  "1 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Ubuntu",
                  "14.0.4"
                ],
                "line": 104
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 35713,
              "status": "passed"
            },
            "line": 105,
            "name": "host 127.0.0.5 is Up",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.5",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25763,
              "status": "passed"
            },
            "line": 106,
            "name": "host 127.0.0.6 is Up",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.6",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 72792,
              "status": "passed"
            },
            "line": 107,
            "name": "software installed on host 127.0.0.5:",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.5",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 108
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 109
              },
              {
                "cells": [
                  "libvirt",
                  "1.2.18"
                ],
                "line": 110
              },
              {
                "cells": [
                  "libvirt-bin",
                  "1.2.18"
                ],
                "line": 111
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 61172,
              "status": "passed"
            },
            "line": 112,
            "name": "software installed on host 127.0.0.6:",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.6",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 113
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 114
              },
              {
                "cells": [
                  "libvirt",
                  "1.2.18"
                ],
                "line": 115
              },
              {
                "cells": [
                  "libvirt-bin",
                  "1.2.18"
                ],
                "line": 116
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 113644,
              "status": "passed"
            },
            "line": 117,
            "name": "host 127.0.0.5 CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.5",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 24
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 118
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 119
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 82551,
              "status": "passed"
            },
            "line": 120,
            "name": "host 127.0.0.6 CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.6",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 24
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 121
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 122
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5695447,
              "status": "passed"
            },
            "line": 123,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 497542,
              "status": "passed"
            },
            "line": 124,
            "name": "VM vm1 gets scheduled on host 127.0.0.5 with kvm hypervisor",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "127.0.0.5",
                  "offset": 30
                }
              ],
              "location": "PlannerDefs.verifyVmScheduledOnHostWithKvm(String,String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 642418,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 126,
        "name": "migration is needed to start the second VM",
        "description": "",
        "id": "basic-planner-features;migration-is-needed-to-start-the-second-vm",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 163535,
              "status": "passed"
            },
            "line": 127,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 128
              },
              {
                "cells": [
                  "vm1",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 129
              },
              {
                "cells": [
                  "vm2",
                  "8 GB",
                  "8 GB",
                  "2",
                  "x86_64"
                ],
                "line": 130
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 163236,
              "status": "passed"
            },
            "line": 131,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distro",
                  "Distro version"
                ],
                "line": 132
              },
              {
                "cells": [
                  "127.0.0.5",
                  "6 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Ubuntu",
                  "14.0.4"
                ],
                "line": 133
              },
              {
                "cells": [
                  "127.0.0.6",
                  "10 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Ubuntu",
                  "14.0.4"
                ],
                "line": 134
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 185737,
              "status": "passed"
            },
            "line": 135,
            "name": "software installed on host 127.0.0.5:",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.5",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 136
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 137
              },
              {
                "cells": [
                  "libvirt",
                  "1.2.18"
                ],
                "line": 138
              },
              {
                "cells": [
                  "libvirt-bin",
                  "1.2.18"
                ],
                "line": 139
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 62594,
              "status": "passed"
            },
            "line": 140,
            "name": "software installed on host 127.0.0.6:",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.6",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 141
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 142
              },
              {
                "cells": [
                  "libvirt",
                  "1.2.18"
                ],
                "line": 143
              },
              {
                "cells": [
                  "libvirt-bin",
                  "1.2.18"
                ],
                "line": 144
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 26343,
              "status": "passed"
            },
            "line": 145,
            "name": "host 127.0.0.5 is Up",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.5",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22210,
              "status": "passed"
            },
            "line": 146,
            "name": "host 127.0.0.6 is Up",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.6",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 102066,
              "status": "passed"
            },
            "line": 147,
            "name": "host 127.0.0.5 CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.5",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 24
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 148
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 149
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 82155,
              "status": "passed"
            },
            "line": 150,
            "name": "host 127.0.0.6 CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.6",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 24
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 151
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 152
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 55537,
              "status": "passed"
            },
            "line": 153,
            "name": "vm1 is running on 127.0.0.6",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 0
                },
                {
                  "val": "127.0.0.6",
                  "offset": 18
                }
              ],
              "location": "PlannerDefs.setVmRunningOnHost(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8165824,
              "status": "passed"
            },
            "line": 154,
            "name": "VM vm2 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm2",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 128882,
              "status": "passed"
            },
            "line": 155,
            "name": "vm1 will be migrated to 127.0.0.5 as step 1",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 0
                },
                {
                  "val": "127.0.0.5",
                  "offset": 24
                },
                {
                  "val": "1",
                  "offset": 42
                }
              ],
              "location": "PlannerDefs.verifyVmMigration(String,String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 82740,
              "status": "passed"
            },
            "line": 156,
            "name": "VM vm2 gets scheduled on host 127.0.0.6 as step 2",
            "match": {
              "arguments": [
                {
                  "val": "vm2",
                  "offset": 3
                },
                {
                  "val": "127.0.0.6",
                  "offset": 30
                },
                {
                  "val": "2",
                  "offset": 48
                }
              ],
              "location": "PlannerDefs.verifyVmGetsScheduledWithStepNumber(String,String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 727410,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 158,
        "name": "A host must be started in order to start the VM",
        "description": "",
        "id": "basic-planner-features;a-host-must-be-started-in-order-to-start-the-vm",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 165546,
              "status": "passed"
            },
            "line": 159,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 160
              },
              {
                "cells": [
                  "vm1",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 161
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 134463,
              "status": "passed"
            },
            "line": 162,
            "name": "Controller configuration \u0027power management enabled\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "power management enabled",
                  "offset": 26
                },
                {
                  "val": "enabled",
                  "offset": 55
                }
              ],
              "location": "PlannerDefs.setConfigurationBoolean(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 72707,
              "status": "passed"
            },
            "line": 163,
            "name": "Controller configuration \u0027wake on lan enabled\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "wake on lan enabled",
                  "offset": 26
                },
                {
                  "val": "enabled",
                  "offset": 50
                }
              ],
              "location": "PlannerDefs.setConfigurationBoolean(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 164180,
              "status": "passed"
            },
            "line": 164,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distro",
                  "Distro version"
                ],
                "line": 165
              },
              {
                "cells": [
                  "127.0.0.5",
                  "6 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Ubuntu",
                  "14.0.4"
                ],
                "line": 166
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 100728,
              "status": "passed"
            },
            "line": 167,
            "name": "software installed on host 127.0.0.5:",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.5",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 168
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 169
              },
              {
                "cells": [
                  "libvirt",
                  "1.2.18"
                ],
                "line": 170
              },
              {
                "cells": [
                  "libvirt-bin",
                  "1.2.18"
                ],
                "line": 171
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 135200,
              "status": "passed"
            },
            "line": 172,
            "name": "host 127.0.0.5 CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.5",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 24
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 173
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 174
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 255473,
              "status": "passed"
            },
            "line": 175,
            "name": "host 127.0.0.5 has wake-on-lan power management",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.5",
                  "offset": 5
                },
                {
                  "val": "wake-on-lan",
                  "offset": 19
                }
              ],
              "location": "PlannerDefs.setPowerManagement(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 35322,
              "status": "passed"
            },
            "line": 176,
            "name": "host 127.0.0.5 is Down",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.5",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDown(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4836697,
              "status": "passed"
            },
            "line": 177,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 115062,
              "status": "passed"
            },
            "line": 178,
            "name": "127.0.0.5 will be started as step 1",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.5",
                  "offset": 0
                },
                {
                  "val": "1",
                  "offset": 34
                }
              ],
              "location": "PlannerDefs.verifyHostStartedUp(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 72932,
              "status": "passed"
            },
            "line": 179,
            "name": "VM vm1 gets scheduled on host 127.0.0.5 as step 2",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "127.0.0.5",
                  "offset": 30
                },
                {
                  "val": "2",
                  "offset": 48
                }
              ],
              "location": "PlannerDefs.verifyVmGetsScheduledWithStepNumber(String,String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 903494,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 181,
        "name": "The virtual disk for the VM already exists",
        "description": "",
        "id": "basic-planner-features;the-virtual-disk-for-the-vm-already-exists",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 175813,
              "status": "passed"
            },
            "line": 182,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 183
              },
              {
                "cells": [
                  "vm1",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 184
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 153056,
              "status": "passed"
            },
            "line": 185,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distro",
                  "Distro version"
                ],
                "line": 186
              },
              {
                "cells": [
                  "127.0.0.5",
                  "6 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Ubuntu",
                  "14.0.4"
                ],
                "line": 187
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 87313,
              "status": "passed"
            },
            "line": 188,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 189
              },
              {
                "cells": [
                  "system-disk-1",
                  "2 GB",
                  "false"
                ],
                "line": 190
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 113572,
              "status": "passed"
            },
            "line": 191,
            "name": "software installed on host 127.0.0.5:",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.5",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 192
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 193
              },
              {
                "cells": [
                  "libvirt",
                  "1.2.18"
                ],
                "line": 194
              },
              {
                "cells": [
                  "libvirt-bin",
                  "1.2.18"
                ],
                "line": 195
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 146992,
              "status": "passed"
            },
            "line": 196,
            "name": "host 127.0.0.5 filesystem is:",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.5",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostFilesystemCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mountpoint",
                  "size",
                  "",
                  "type"
                ],
                "line": 197
              },
              {
                "cells": [
                  "/kerub",
                  "100 GB",
                  "",
                  "ext4"
                ],
                "line": 198
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 40309,
              "status": "passed"
            },
            "line": 199,
            "name": "host 127.0.0.5 is Up",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.5",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 145276,
              "status": "passed"
            },
            "line": 200,
            "name": "host 127.0.0.5 CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "127.0.0.5",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 24
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 201
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 202
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 50082,
              "status": "passed"
            },
            "line": 203,
            "name": "system-disk-1 is attached to vm111",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "vm111",
                  "offset": 29
                }
              ],
              "location": "PlannerDefs.attachDiskToVm(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 81897,
              "status": "passed"
            },
            "line": 204,
            "name": "the virtual disk system-disk-1 is created on 127.0.0.5 at /kerub",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 17
                },
                {
                  "val": "127.0.0.5",
                  "offset": 45
                },
                {
                  "val": "/kerub",
                  "offset": 58
                }
              ],
              "location": "PlannerDefs.createVStorageDyn(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4159770,
              "status": "passed"
            },
            "line": 205,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 53843,
              "status": "passed"
            },
            "line": 206,
            "name": "the virtual disk system-disk-1 must not be allocated",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 17
                }
              ],
              "location": "PlannerDefs.verifyNoStorageCreate(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 85718,
              "status": "passed"
            },
            "line": 207,
            "name": "VM vm1 gets scheduled on host 127.0.0.5 as step 1",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "127.0.0.5",
                  "offset": 30
                },
                {
                  "val": "1",
                  "offset": 48
                }
              ],
              "location": "PlannerDefs.verifyVmGetsScheduledWithStepNumber(String,String,int)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "basic planner features",
    "description": "",
    "id": "basic-planner-features",
    "keyword": "Feature",
    "uri": "stories/general/planner/planner.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 7941970,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 3,
        "name": "Dead migration of an LVM allocation triggered by host recycle",
        "description": "",
        "id": "storage-migration;dead-migration-of-an-lvm-allocation-triggered-by-host-recycle",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 277994,
              "status": "passed"
            },
            "line": 4,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Dist. Version"
                ],
                "line": 5
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7"
                ],
                "line": 6
              },
              {
                "cells": [
                  "host-2.example.com",
                  "8 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7"
                ],
                "line": 7
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 123176,
              "status": "passed"
            },
            "line": 8,
            "name": "Controller configuration \u0027lvm create volume enabled\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "lvm create volume enabled",
                  "offset": 26
                },
                {
                  "val": "enabled",
                  "offset": 56
                }
              ],
              "location": "PlannerDefs.setConfigurationBoolean(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 343419,
              "status": "passed"
            },
            "line": 9,
            "name": "host host-1.example.com volume groups are:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostLvmCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "vg name",
                  "size",
                  "pvs"
                ],
                "line": 10
              },
              {
                "cells": [
                  "vg-1",
                  "512 GB",
                  "/dev/sda: 128 GB, /dev/sdb: 128 GB, /dev/sdc: 128 GB, /dev/sdd: 128 GB"
                ],
                "line": 11
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 290059,
              "status": "passed"
            },
            "line": 12,
            "name": "host host-2.example.com volume groups are:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostLvmCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "vg name",
                  "size",
                  "pvs"
                ],
                "line": 13
              },
              {
                "cells": [
                  "vg-1",
                  "512 GB",
                  "/dev/sda: 128 GB, /dev/sdb: 128 GB, /dev/sdc: 128 GB, /dev/sdd: 128 GB"
                ],
                "line": 14
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 44450,
              "status": "passed"
            },
            "line": 15,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 44341,
              "status": "passed"
            },
            "line": 16,
            "name": "host host-2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 187420,
              "status": "passed"
            },
            "line": 17,
            "name": "volume group vg-1 on host host-1.example.com has 500GB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "vg-1",
                  "offset": 13
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "500GB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setVolumeGroupFreeCapacity(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 110743,
              "status": "passed"
            },
            "line": 18,
            "name": "volume group vg-1 on host host-2.example.com has 512GB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "vg-1",
                  "offset": 13
                },
                {
                  "val": "host-2.example.com",
                  "offset": 26
                },
                {
                  "val": "512GB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setVolumeGroupFreeCapacity(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 95571,
              "status": "passed"
            },
            "line": 19,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 20
              },
              {
                "cells": [
                  "system-disk-1",
                  "2 GB",
                  "false"
                ],
                "line": 21
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 65357,
              "status": "passed"
            },
            "line": 22,
            "name": "system-disk-1 is allocated on host host-1.example.com volume group vg-1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "host-1.example.com",
                  "offset": 35
                },
                {
                  "val": "vg-1",
                  "offset": 67
                }
              ],
              "location": "PlannerDefs.createLvmAllocation(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 36043,
              "status": "passed"
            },
            "line": 23,
            "name": "host host-1.example.com is scheduled for recycling",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHoostRecycle(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24116500,
              "status": "passed"
            },
            "line": 24,
            "name": "planner starts",
            "match": {
              "location": "PlannerDefs.kickPlanner()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 88966,
              "status": "passed"
            },
            "line": 25,
            "name": "virtual disk system-disk-1 will be block dead-migrated from host-1.example.com to host-2.example.com",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 13
                },
                {
                  "val": "host-1.example.com",
                  "offset": 60
                },
                {
                  "val": "host-2.example.com",
                  "offset": 82
                }
              ],
              "location": "PlannerDefs.verifyBlockDeadMigration(String,String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 34145,
              "status": "passed"
            },
            "line": 26,
            "name": "host host-1.example.com will be recycled",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.verifyHostRecycle(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 1521587,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 28,
        "name": "Dead migration of an LVM allocation to gvinum triggered by host recycle",
        "description": "",
        "id": "storage-migration;dead-migration-of-an-lvm-allocation-to-gvinum-triggered-by-host-recycle",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 218534,
              "status": "passed"
            },
            "line": 29,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Dist. Version"
                ],
                "line": 30
              },
              {
                "cells": [
                  "host-1.example.com",
                  "8 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7"
                ],
                "line": 31
              },
              {
                "cells": [
                  "host-2.example.com",
                  "8 GB",
                  "2",
                  "4",
                  "x86_64",
                  "BSD",
                  "FreeBSD",
                  "11"
                ],
                "line": 32
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 103008,
              "status": "passed"
            },
            "line": 33,
            "name": "Controller configuration \u0027gvinum create volume enabled\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "gvinum create volume enabled",
                  "offset": 26
                },
                {
                  "val": "enabled",
                  "offset": 59
                }
              ],
              "location": "PlannerDefs.setConfigurationBoolean(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 221186,
              "status": "passed"
            },
            "line": 34,
            "name": "host host-1.example.com volume groups are:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostLvmCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "vg name",
                  "size",
                  "pvs"
                ],
                "line": 35
              },
              {
                "cells": [
                  "vg-1",
                  "512 GB",
                  "/dev/sda: 128 GB, /dev/sdb: 128 GB, /dev/sdc: 128 GB, /dev/sdd: 128 GB"
                ],
                "line": 36
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 170093,
              "status": "passed"
            },
            "line": 37,
            "name": "host host-2.example.com gvinum disks are:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostGvinumCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "device",
                  "size"
                ],
                "line": 38
              },
              {
                "cells": [
                  "disk1",
                  "/dev/disk1",
                  "1 TB"
                ],
                "line": 39
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 60413,
              "status": "passed"
            },
            "line": 40,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 33708,
              "status": "passed"
            },
            "line": 41,
            "name": "host host-2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 92765,
              "status": "passed"
            },
            "line": 42,
            "name": "volume group vg-1 on host host-1.example.com has 500GB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "vg-1",
                  "offset": 13
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "500GB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setVolumeGroupFreeCapacity(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 722600,
              "status": "passed"
            },
            "line": 43,
            "name": "gvinum disk disk1 on host host-2.example.com has 500GB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "disk1",
                  "offset": 12
                },
                {
                  "val": "host-2.example.com",
                  "offset": 26
                },
                {
                  "val": "500GB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setGvinumDiskFreeCapacity(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 89008,
              "status": "passed"
            },
            "line": 44,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 45
              },
              {
                "cells": [
                  "system-disk-1",
                  "2 GB",
                  "false"
                ],
                "line": 46
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 79540,
              "status": "passed"
            },
            "line": 47,
            "name": "system-disk-1 is allocated on host host-1.example.com volume group vg-1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "host-1.example.com",
                  "offset": 35
                },
                {
                  "val": "vg-1",
                  "offset": 67
                }
              ],
              "location": "PlannerDefs.createLvmAllocation(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 27962,
              "status": "passed"
            },
            "line": 48,
            "name": "host host-1.example.com is scheduled for recycling",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHoostRecycle(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 26759835,
              "status": "passed"
            },
            "line": 49,
            "name": "planner starts",
            "match": {
              "location": "PlannerDefs.kickPlanner()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 67510,
              "status": "passed"
            },
            "line": 50,
            "name": "virtual disk system-disk-1 will be block dead-migrated from host-1.example.com to host-2.example.com",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 13
                },
                {
                  "val": "host-1.example.com",
                  "offset": 60
                },
                {
                  "val": "host-2.example.com",
                  "offset": 82
                }
              ],
              "location": "PlannerDefs.verifyBlockDeadMigration(String,String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 75946,
              "status": "passed"
            },
            "line": 51,
            "name": "host host-1.example.com will be recycled",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.verifyHostRecycle(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Storage migration",
    "description": "",
    "id": "storage-migration",
    "keyword": "Feature",
    "uri": "stories/general/planner/storage-migration.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 506760,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 44,
        "name": "Share an existing disk with ISCSI to start the VM",
        "description": "",
        "id": "storage-management;share-an-existing-disk-with-iscsi-to-start-the-vm;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 171507,
              "status": "passed"
            },
            "line": 5,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Dist. Version"
                ],
                "line": 6
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Fedora",
                  "23"
                ],
                "line": 7
              },
              {
                "cells": [
                  "host-2.example.com",
                  "8 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Fedora",
                  "23"
                ],
                "line": 8
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 37696,
              "status": "passed"
            },
            "line": 9,
            "name": "Controller configuration \u0027lvm create volume enabled\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "lvm create volume enabled",
                  "offset": 26
                },
                {
                  "val": "enabled",
                  "offset": 56
                }
              ],
              "location": "PlannerDefs.setConfigurationBoolean(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 139559,
              "status": "passed"
            },
            "line": 10,
            "name": "host host-1.example.com volume groups are:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostLvmCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "vg name",
                  "size",
                  "pvs"
                ],
                "line": 11
              },
              {
                "cells": [
                  "vg-1",
                  "512 GB",
                  "/dev/sda: 128 GB, /dev/sdb: 128 GB, /dev/sdc: 128 GB, /dev/sdd: 128 GB"
                ],
                "line": 12
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22205,
              "status": "passed"
            },
            "line": 13,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12326,
              "status": "passed"
            },
            "line": 14,
            "name": "host host-2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 88913,
              "status": "passed"
            },
            "line": 15,
            "name": "host host-1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 16
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 17
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 97307,
              "status": "passed"
            },
            "line": 18,
            "name": "host host-2.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 19
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 20
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 53696,
              "status": "passed"
            },
            "line": 21,
            "name": "software installed on host host-2.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              4
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 22
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 23
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 24
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 48102,
              "status": "passed"
            },
            "line": 25,
            "name": "software installed on host host-1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 26
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 27
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 28
              },
              {
                "cells": [
                  "scsi-target-utils",
                  "1.0"
                ],
                "line": 29
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 55621,
              "status": "passed"
            },
            "line": 30,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 31
              },
              {
                "cells": [
                  "system-disk-1",
                  "2 GB",
                  "false"
                ],
                "line": 32
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 42133,
              "status": "passed"
            },
            "line": 33,
            "name": "system-disk-1 is allocated on host host-1.example.com volume group vg-1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "host-1.example.com",
                  "offset": 35
                },
                {
                  "val": "vg-1",
                  "offset": 67
                }
              ],
              "location": "PlannerDefs.createLvmAllocation(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 85363,
              "status": "passed"
            },
            "line": 34,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 35
              },
              {
                "cells": [
                  "vm1",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 36
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 44052,
              "status": "passed"
            },
            "line": 37,
            "name": "system-disk-1 is attached to vm1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "vm1",
                  "offset": 29
                }
              ],
              "location": "PlannerDefs.attachDiskToVm(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10639667,
              "status": "passed"
            },
            "line": 38,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 186871,
              "status": "passed"
            },
            "line": 39,
            "name": "system-disk-1 must be shared with iscsi on host host-1.example.com as step 1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "host-1.example.com",
                  "offset": 48
                },
                {
                  "val": "1",
                  "offset": 75
                }
              ],
              "location": "PlannerDefs.verifyDiskIscsiShare(String,String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 44919,
              "status": "passed"
            },
            "line": 40,
            "name": "VM vm1 gets scheduled on host host-2.example.com as step 2",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "host-2.example.com",
                  "offset": 30
                },
                {
                  "val": "2",
                  "offset": 57
                }
              ],
              "location": "PlannerDefs.verifyVmGetsScheduledWithStepNumber(String,String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 595752,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 45,
        "name": "Share an existing disk with ISCSI to start the VM",
        "description": "",
        "id": "storage-management;share-an-existing-disk-with-iscsi-to-start-the-vm;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 170015,
              "status": "passed"
            },
            "line": 5,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Dist. Version"
                ],
                "line": 6
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "openSUSE",
                  "13"
                ],
                "line": 7
              },
              {
                "cells": [
                  "host-2.example.com",
                  "8 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "openSUSE",
                  "13"
                ],
                "line": 8
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 40696,
              "status": "passed"
            },
            "line": 9,
            "name": "Controller configuration \u0027lvm create volume enabled\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "lvm create volume enabled",
                  "offset": 26
                },
                {
                  "val": "enabled",
                  "offset": 56
                }
              ],
              "location": "PlannerDefs.setConfigurationBoolean(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 158339,
              "status": "passed"
            },
            "line": 10,
            "name": "host host-1.example.com volume groups are:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostLvmCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "vg name",
                  "size",
                  "pvs"
                ],
                "line": 11
              },
              {
                "cells": [
                  "vg-1",
                  "512 GB",
                  "/dev/sda: 128 GB, /dev/sdb: 128 GB, /dev/sdc: 128 GB, /dev/sdd: 128 GB"
                ],
                "line": 12
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23341,
              "status": "passed"
            },
            "line": 13,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25079,
              "status": "passed"
            },
            "line": 14,
            "name": "host host-2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 122293,
              "status": "passed"
            },
            "line": 15,
            "name": "host host-1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 16
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 17
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 95756,
              "status": "passed"
            },
            "line": 18,
            "name": "host host-2.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 19
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 20
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 87990,
              "status": "passed"
            },
            "line": 21,
            "name": "software installed on host host-2.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              4
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 22
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 23
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 24
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 116417,
              "status": "passed"
            },
            "line": 25,
            "name": "software installed on host host-1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 26
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 27
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 28
              },
              {
                "cells": [
                  "tgt",
                  "1.0"
                ],
                "line": 29
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 82627,
              "status": "passed"
            },
            "line": 30,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 31
              },
              {
                "cells": [
                  "system-disk-1",
                  "2 GB",
                  "false"
                ],
                "line": 32
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 52227,
              "status": "passed"
            },
            "line": 33,
            "name": "system-disk-1 is allocated on host host-1.example.com volume group vg-1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "host-1.example.com",
                  "offset": 35
                },
                {
                  "val": "vg-1",
                  "offset": 67
                }
              ],
              "location": "PlannerDefs.createLvmAllocation(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 124083,
              "status": "passed"
            },
            "line": 34,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 35
              },
              {
                "cells": [
                  "vm1",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 36
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 43360,
              "status": "passed"
            },
            "line": 37,
            "name": "system-disk-1 is attached to vm1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "vm1",
                  "offset": 29
                }
              ],
              "location": "PlannerDefs.attachDiskToVm(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3784962,
              "status": "passed"
            },
            "line": 38,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 78093,
              "status": "passed"
            },
            "line": 39,
            "name": "system-disk-1 must be shared with iscsi on host host-1.example.com as step 1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "host-1.example.com",
                  "offset": 48
                },
                {
                  "val": "1",
                  "offset": 75
                }
              ],
              "location": "PlannerDefs.verifyDiskIscsiShare(String,String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 43094,
              "status": "passed"
            },
            "line": 40,
            "name": "VM vm1 gets scheduled on host host-2.example.com as step 2",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "host-2.example.com",
                  "offset": 30
                },
                {
                  "val": "2",
                  "offset": 57
                }
              ],
              "location": "PlannerDefs.verifyVmGetsScheduledWithStepNumber(String,String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 611093,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 46,
        "name": "Share an existing disk with ISCSI to start the VM",
        "description": "",
        "id": "storage-management;share-an-existing-disk-with-iscsi-to-start-the-vm;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 181957,
              "status": "passed"
            },
            "line": 5,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Dist. Version"
                ],
                "line": 6
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7.1"
                ],
                "line": 7
              },
              {
                "cells": [
                  "host-2.example.com",
                  "8 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7.1"
                ],
                "line": 8
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 52542,
              "status": "passed"
            },
            "line": 9,
            "name": "Controller configuration \u0027lvm create volume enabled\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "lvm create volume enabled",
                  "offset": 26
                },
                {
                  "val": "enabled",
                  "offset": 56
                }
              ],
              "location": "PlannerDefs.setConfigurationBoolean(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 217820,
              "status": "passed"
            },
            "line": 10,
            "name": "host host-1.example.com volume groups are:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostLvmCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "vg name",
                  "size",
                  "pvs"
                ],
                "line": 11
              },
              {
                "cells": [
                  "vg-1",
                  "512 GB",
                  "/dev/sda: 128 GB, /dev/sdb: 128 GB, /dev/sdc: 128 GB, /dev/sdd: 128 GB"
                ],
                "line": 12
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23119,
              "status": "passed"
            },
            "line": 13,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23753,
              "status": "passed"
            },
            "line": 14,
            "name": "host host-2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 142701,
              "status": "passed"
            },
            "line": 15,
            "name": "host host-1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 16
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 17
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 113970,
              "status": "passed"
            },
            "line": 18,
            "name": "host host-2.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 19
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 20
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 68100,
              "status": "passed"
            },
            "line": 21,
            "name": "software installed on host host-2.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              4
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 22
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 23
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 24
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 78605,
              "status": "passed"
            },
            "line": 25,
            "name": "software installed on host host-1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 26
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 27
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 28
              },
              {
                "cells": [
                  "scsi-target-utils",
                  "1.0"
                ],
                "line": 29
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 77387,
              "status": "passed"
            },
            "line": 30,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 31
              },
              {
                "cells": [
                  "system-disk-1",
                  "2 GB",
                  "false"
                ],
                "line": 32
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 40648,
              "status": "passed"
            },
            "line": 33,
            "name": "system-disk-1 is allocated on host host-1.example.com volume group vg-1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "host-1.example.com",
                  "offset": 35
                },
                {
                  "val": "vg-1",
                  "offset": 67
                }
              ],
              "location": "PlannerDefs.createLvmAllocation(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 143005,
              "status": "passed"
            },
            "line": 34,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 35
              },
              {
                "cells": [
                  "vm1",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 36
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 49067,
              "status": "passed"
            },
            "line": 37,
            "name": "system-disk-1 is attached to vm1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "vm1",
                  "offset": 29
                }
              ],
              "location": "PlannerDefs.attachDiskToVm(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4701047,
              "status": "passed"
            },
            "line": 38,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 84658,
              "status": "passed"
            },
            "line": 39,
            "name": "system-disk-1 must be shared with iscsi on host host-1.example.com as step 1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "host-1.example.com",
                  "offset": 48
                },
                {
                  "val": "1",
                  "offset": 75
                }
              ],
              "location": "PlannerDefs.verifyDiskIscsiShare(String,String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 42244,
              "status": "passed"
            },
            "line": 40,
            "name": "VM vm1 gets scheduled on host host-2.example.com as step 2",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "host-2.example.com",
                  "offset": 30
                },
                {
                  "val": "2",
                  "offset": 57
                }
              ],
              "location": "PlannerDefs.verifyVmGetsScheduledWithStepNumber(String,String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2132103,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 47,
        "name": "Share an existing disk with ISCSI to start the VM",
        "description": "",
        "id": "storage-management;share-an-existing-disk-with-iscsi-to-start-the-vm;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 187682,
              "status": "passed"
            },
            "line": 5,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Dist. Version"
                ],
                "line": 6
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Debian",
                  "8.6"
                ],
                "line": 7
              },
              {
                "cells": [
                  "host-2.example.com",
                  "8 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Debian",
                  "8.6"
                ],
                "line": 8
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 42768,
              "status": "passed"
            },
            "line": 9,
            "name": "Controller configuration \u0027lvm create volume enabled\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "lvm create volume enabled",
                  "offset": 26
                },
                {
                  "val": "enabled",
                  "offset": 56
                }
              ],
              "location": "PlannerDefs.setConfigurationBoolean(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 323720,
              "status": "passed"
            },
            "line": 10,
            "name": "host host-1.example.com volume groups are:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostLvmCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "vg name",
                  "size",
                  "pvs"
                ],
                "line": 11
              },
              {
                "cells": [
                  "vg-1",
                  "512 GB",
                  "/dev/sda: 128 GB, /dev/sdb: 128 GB, /dev/sdc: 128 GB, /dev/sdd: 128 GB"
                ],
                "line": 12
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 38178,
              "status": "passed"
            },
            "line": 13,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19460,
              "status": "passed"
            },
            "line": 14,
            "name": "host host-2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 124959,
              "status": "passed"
            },
            "line": 15,
            "name": "host host-1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 16
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 17
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 103135,
              "status": "passed"
            },
            "line": 18,
            "name": "host host-2.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 19
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 20
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 80096,
              "status": "passed"
            },
            "line": 21,
            "name": "software installed on host host-2.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              4
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 22
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 23
              },
              {
                "cells": [
                  "libvirt-clients,libvirt-daemon",
                  "1.2.18"
                ],
                "line": 24
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 89377,
              "status": "passed"
            },
            "line": 25,
            "name": "software installed on host host-1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 26
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 27
              },
              {
                "cells": [
                  "libvirt-clients,libvirt-daemon",
                  "1.2.18"
                ],
                "line": 28
              },
              {
                "cells": [
                  "tgt",
                  "1.0"
                ],
                "line": 29
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 113932,
              "status": "passed"
            },
            "line": 30,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 31
              },
              {
                "cells": [
                  "system-disk-1",
                  "2 GB",
                  "false"
                ],
                "line": 32
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 58105,
              "status": "passed"
            },
            "line": 33,
            "name": "system-disk-1 is allocated on host host-1.example.com volume group vg-1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "host-1.example.com",
                  "offset": 35
                },
                {
                  "val": "vg-1",
                  "offset": 67
                }
              ],
              "location": "PlannerDefs.createLvmAllocation(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 251806,
              "status": "passed"
            },
            "line": 34,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 35
              },
              {
                "cells": [
                  "vm1",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 36
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 49199,
              "status": "passed"
            },
            "line": 37,
            "name": "system-disk-1 is attached to vm1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "vm1",
                  "offset": 29
                }
              ],
              "location": "PlannerDefs.attachDiskToVm(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3888302,
              "status": "passed"
            },
            "line": 38,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 98519,
              "status": "passed"
            },
            "line": 39,
            "name": "system-disk-1 must be shared with iscsi on host host-1.example.com as step 1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "host-1.example.com",
                  "offset": 48
                },
                {
                  "val": "1",
                  "offset": 75
                }
              ],
              "location": "PlannerDefs.verifyDiskIscsiShare(String,String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 76614,
              "status": "passed"
            },
            "line": 40,
            "name": "VM vm1 gets scheduled on host host-2.example.com as step 2",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "host-2.example.com",
                  "offset": 30
                },
                {
                  "val": "2",
                  "offset": 57
                }
              ],
              "location": "PlannerDefs.verifyVmGetsScheduledWithStepNumber(String,String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 721506,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 48,
        "name": "Share an existing disk with ISCSI to start the VM",
        "description": "",
        "id": "storage-management;share-an-existing-disk-with-iscsi-to-start-the-vm;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 322187,
              "status": "passed"
            },
            "line": 5,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Dist. Version"
                ],
                "line": 6
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Ubuntu",
                  "14.0.4"
                ],
                "line": 7
              },
              {
                "cells": [
                  "host-2.example.com",
                  "8 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Ubuntu",
                  "14.0.4"
                ],
                "line": 8
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 53911,
              "status": "passed"
            },
            "line": 9,
            "name": "Controller configuration \u0027lvm create volume enabled\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "lvm create volume enabled",
                  "offset": 26
                },
                {
                  "val": "enabled",
                  "offset": 56
                }
              ],
              "location": "PlannerDefs.setConfigurationBoolean(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 240343,
              "status": "passed"
            },
            "line": 10,
            "name": "host host-1.example.com volume groups are:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostLvmCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "vg name",
                  "size",
                  "pvs"
                ],
                "line": 11
              },
              {
                "cells": [
                  "vg-1",
                  "512 GB",
                  "/dev/sda: 128 GB, /dev/sdb: 128 GB, /dev/sdc: 128 GB, /dev/sdd: 128 GB"
                ],
                "line": 12
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 34599,
              "status": "passed"
            },
            "line": 13,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25445,
              "status": "passed"
            },
            "line": 14,
            "name": "host host-2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 174992,
              "status": "passed"
            },
            "line": 15,
            "name": "host host-1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 16
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 17
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 126305,
              "status": "passed"
            },
            "line": 18,
            "name": "host host-2.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 19
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 20
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 89587,
              "status": "passed"
            },
            "line": 21,
            "name": "software installed on host host-2.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              4
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 22
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 23
              },
              {
                "cells": [
                  "libvirt-bin",
                  "1.2.18"
                ],
                "line": 24
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 171561,
              "status": "passed"
            },
            "line": 25,
            "name": "software installed on host host-1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 26
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 27
              },
              {
                "cells": [
                  "libvirt-bin",
                  "1.2.18"
                ],
                "line": 28
              },
              {
                "cells": [
                  "tgt",
                  "1.0"
                ],
                "line": 29
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 85018,
              "status": "passed"
            },
            "line": 30,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 31
              },
              {
                "cells": [
                  "system-disk-1",
                  "2 GB",
                  "false"
                ],
                "line": 32
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 53296,
              "status": "passed"
            },
            "line": 33,
            "name": "system-disk-1 is allocated on host host-1.example.com volume group vg-1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "host-1.example.com",
                  "offset": 35
                },
                {
                  "val": "vg-1",
                  "offset": 67
                }
              ],
              "location": "PlannerDefs.createLvmAllocation(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 125047,
              "status": "passed"
            },
            "line": 34,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 35
              },
              {
                "cells": [
                  "vm1",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 36
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 45140,
              "status": "passed"
            },
            "line": 37,
            "name": "system-disk-1 is attached to vm1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "vm1",
                  "offset": 29
                }
              ],
              "location": "PlannerDefs.attachDiskToVm(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6430261,
              "status": "passed"
            },
            "line": 38,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 73423,
              "status": "passed"
            },
            "line": 39,
            "name": "system-disk-1 must be shared with iscsi on host host-1.example.com as step 1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "host-1.example.com",
                  "offset": 48
                },
                {
                  "val": "1",
                  "offset": 75
                }
              ],
              "location": "PlannerDefs.verifyDiskIscsiShare(String,String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 44765,
              "status": "passed"
            },
            "line": 40,
            "name": "VM vm1 gets scheduled on host host-2.example.com as step 2",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "host-2.example.com",
                  "offset": 30
                },
                {
                  "val": "2",
                  "offset": 57
                }
              ],
              "location": "PlannerDefs.verifyVmGetsScheduledWithStepNumber(String,String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 5727313,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 77,
        "name": "Create a large disk on multiple gvinum partitions",
        "description": "",
        "id": "storage-management;create-a-large-disk-on-multiple-gvinum-partitions;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 192386,
              "status": "passed"
            },
            "line": 51,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "matchedColumns": [
              0
            ],
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Dist. Version"
                ],
                "line": 52
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "BSD",
                  "FreeBSD",
                  "10"
                ],
                "line": 53
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 46595,
              "status": "passed"
            },
            "line": 54,
            "name": "Controller configuration \u0027gvinum create volume enabled\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "gvinum create volume enabled",
                  "offset": 26
                },
                {
                  "val": "enabled",
                  "offset": 59
                }
              ],
              "location": "PlannerDefs.setConfigurationBoolean(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 97365,
              "status": "passed"
            },
            "line": 55,
            "name": "host host-1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 56
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 57
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 218575,
              "status": "passed"
            },
            "line": 58,
            "name": "host host-1.example.com gvinum disks are:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostGvinumCapabilities(String,DataTable)"
            },
            "matchedColumns": [
              2,
              4,
              6,
              8
            ],
            "rows": [
              {
                "cells": [
                  "name",
                  "device",
                  "size"
                ],
                "line": 59
              },
              {
                "cells": [
                  "disk1",
                  "/dev/disk1",
                  "2GB"
                ],
                "line": 60
              },
              {
                "cells": [
                  "disk2",
                  "/dev/disk2",
                  "2GB"
                ],
                "line": 61
              },
              {
                "cells": [
                  "disk3",
                  "/dev/disk3",
                  "2GB"
                ],
                "line": 62
              },
              {
                "cells": [
                  "disk4",
                  "/dev/disk4",
                  "2GB"
                ],
                "line": 63
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29514,
              "status": "passed"
            },
            "line": 64,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 87905,
              "status": "passed"
            },
            "line": 65,
            "name": "gvinum disk disk1 on host host-1.example.com has 2GB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "disk1",
                  "offset": 12
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "2GB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setGvinumDiskFreeCapacity(String,String,String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 101304,
              "status": "passed"
            },
            "line": 66,
            "name": "gvinum disk disk2 on host host-1.example.com has 2GB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "disk2",
                  "offset": 12
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "2GB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setGvinumDiskFreeCapacity(String,String,String)"
            },
            "matchedColumns": [
              5
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 87656,
              "status": "passed"
            },
            "line": 67,
            "name": "gvinum disk disk3 on host host-1.example.com has 2GB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "disk3",
                  "offset": 12
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "2GB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setGvinumDiskFreeCapacity(String,String,String)"
            },
            "matchedColumns": [
              7
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 104411,
              "status": "passed"
            },
            "line": 68,
            "name": "gvinum disk disk4 on host host-1.example.com has 2GB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "disk4",
                  "offset": 12
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "2GB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setGvinumDiskFreeCapacity(String,String,String)"
            },
            "matchedColumns": [
              9
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 120956,
              "status": "passed"
            },
            "line": 69,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "matchedColumns": [
              1
            ],
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 70
              },
              {
                "cells": [
                  "system-disk-1",
                  "7GB",
                  "false"
                ],
                "line": 71
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10275022,
              "status": "passed"
            },
            "line": 72,
            "name": "virtual disk system-disk-1 gets an availability expectation",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 13
                }
              ],
              "location": "PlannerDefs.createVirtualStorageAvailabilityExpectation(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 448658,
              "status": "passed"
            },
            "line": 73,
            "name": "the virtual disk system-disk-1 must be allocated on host-1.example.com under on the gvinum disks: disk1,disk2,disk3,disk4",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 17
                },
                {
                  "val": "host-1.example.com",
                  "offset": 52
                },
                {
                  "val": "disk1,disk2,disk3,disk4",
                  "offset": 98
                }
              ],
              "location": "PlannerDefs.checkGvinumConcatenated(String,String,String\u003e)"
            },
            "matchedColumns": [
              10
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 4198252,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 78,
        "name": "Create a large disk on multiple gvinum partitions",
        "description": "",
        "id": "storage-management;create-a-large-disk-on-multiple-gvinum-partitions;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 174324,
              "status": "passed"
            },
            "line": 51,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "matchedColumns": [
              0
            ],
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Dist. Version"
                ],
                "line": 52
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "BSD",
                  "FreeBSD",
                  "10"
                ],
                "line": 53
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 47863,
              "status": "passed"
            },
            "line": 54,
            "name": "Controller configuration \u0027gvinum create volume enabled\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "gvinum create volume enabled",
                  "offset": 26
                },
                {
                  "val": "enabled",
                  "offset": 59
                }
              ],
              "location": "PlannerDefs.setConfigurationBoolean(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 116072,
              "status": "passed"
            },
            "line": 55,
            "name": "host host-1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 56
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 57
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 205343,
              "status": "passed"
            },
            "line": 58,
            "name": "host host-1.example.com gvinum disks are:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostGvinumCapabilities(String,DataTable)"
            },
            "matchedColumns": [
              2,
              4,
              6,
              8
            ],
            "rows": [
              {
                "cells": [
                  "name",
                  "device",
                  "size"
                ],
                "line": 59
              },
              {
                "cells": [
                  "disk1",
                  "/dev/disk1",
                  "2GB"
                ],
                "line": 60
              },
              {
                "cells": [
                  "disk2",
                  "/dev/disk2",
                  "2GB"
                ],
                "line": 61
              },
              {
                "cells": [
                  "disk3",
                  "/dev/disk3",
                  "2GB"
                ],
                "line": 62
              },
              {
                "cells": [
                  "disk4",
                  "/dev/disk4",
                  "2GB"
                ],
                "line": 63
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 45066,
              "status": "passed"
            },
            "line": 64,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 161194,
              "status": "passed"
            },
            "line": 65,
            "name": "gvinum disk disk1 on host host-1.example.com has 600MB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "disk1",
                  "offset": 12
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "600MB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setGvinumDiskFreeCapacity(String,String,String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 70110,
              "status": "passed"
            },
            "line": 66,
            "name": "gvinum disk disk2 on host host-1.example.com has 600MB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "disk2",
                  "offset": 12
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "600MB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setGvinumDiskFreeCapacity(String,String,String)"
            },
            "matchedColumns": [
              5
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 58481,
              "status": "passed"
            },
            "line": 67,
            "name": "gvinum disk disk3 on host host-1.example.com has 600MB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "disk3",
                  "offset": 12
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "600MB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setGvinumDiskFreeCapacity(String,String,String)"
            },
            "matchedColumns": [
              7
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 67844,
              "status": "passed"
            },
            "line": 68,
            "name": "gvinum disk disk4 on host host-1.example.com has 600MB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "disk4",
                  "offset": 12
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "600MB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setGvinumDiskFreeCapacity(String,String,String)"
            },
            "matchedColumns": [
              9
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 102524,
              "status": "passed"
            },
            "line": 69,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "matchedColumns": [
              1
            ],
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 70
              },
              {
                "cells": [
                  "system-disk-1",
                  "2GB",
                  "false"
                ],
                "line": 71
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18332613,
              "status": "passed"
            },
            "line": 72,
            "name": "virtual disk system-disk-1 gets an availability expectation",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 13
                }
              ],
              "location": "PlannerDefs.createVirtualStorageAvailabilityExpectation(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 81315,
              "status": "passed"
            },
            "line": 73,
            "name": "the virtual disk system-disk-1 must be allocated on host-1.example.com under on the gvinum disks: disk1,disk2,disk3,disk4",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 17
                },
                {
                  "val": "host-1.example.com",
                  "offset": 52
                },
                {
                  "val": "disk1,disk2,disk3,disk4",
                  "offset": 98
                }
              ],
              "location": "PlannerDefs.checkGvinumConcatenated(String,String,String\u003e)"
            },
            "matchedColumns": [
              10
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 8013748,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 79,
        "name": "Create a large disk on multiple gvinum partitions",
        "description": "",
        "id": "storage-management;create-a-large-disk-on-multiple-gvinum-partitions;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 219935,
              "status": "passed"
            },
            "line": 51,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "matchedColumns": [
              0
            ],
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Dist. Version"
                ],
                "line": 52
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "BSD",
                  "FreeBSD",
                  "10"
                ],
                "line": 53
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 44578,
              "status": "passed"
            },
            "line": 54,
            "name": "Controller configuration \u0027gvinum create volume enabled\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "gvinum create volume enabled",
                  "offset": 26
                },
                {
                  "val": "enabled",
                  "offset": 59
                }
              ],
              "location": "PlannerDefs.setConfigurationBoolean(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 104053,
              "status": "passed"
            },
            "line": 55,
            "name": "host host-1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 56
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 57
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 149678,
              "status": "passed"
            },
            "line": 58,
            "name": "host host-1.example.com gvinum disks are:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostGvinumCapabilities(String,DataTable)"
            },
            "matchedColumns": [
              2,
              4,
              6,
              8
            ],
            "rows": [
              {
                "cells": [
                  "name",
                  "device",
                  "size"
                ],
                "line": 59
              },
              {
                "cells": [
                  "disk1",
                  "/dev/disk1",
                  "2GB"
                ],
                "line": 60
              },
              {
                "cells": [
                  "disk2",
                  "/dev/disk2",
                  "2GB"
                ],
                "line": 61
              },
              {
                "cells": [
                  "disk3",
                  "/dev/disk3",
                  "2GB"
                ],
                "line": 62
              },
              {
                "cells": [
                  "disk4",
                  "/dev/disk4",
                  "2GB"
                ],
                "line": 63
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23311,
              "status": "passed"
            },
            "line": 64,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 84920,
              "status": "passed"
            },
            "line": 65,
            "name": "gvinum disk disk1 on host host-1.example.com has 700MB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "disk1",
                  "offset": 12
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "700MB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setGvinumDiskFreeCapacity(String,String,String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 91476,
              "status": "passed"
            },
            "line": 66,
            "name": "gvinum disk disk2 on host host-1.example.com has 700MB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "disk2",
                  "offset": 12
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "700MB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setGvinumDiskFreeCapacity(String,String,String)"
            },
            "matchedColumns": [
              5
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 54529,
              "status": "passed"
            },
            "line": 67,
            "name": "gvinum disk disk3 on host host-1.example.com has 700MB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "disk3",
                  "offset": 12
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "700MB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setGvinumDiskFreeCapacity(String,String,String)"
            },
            "matchedColumns": [
              7
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 58130,
              "status": "passed"
            },
            "line": 68,
            "name": "gvinum disk disk4 on host host-1.example.com has 0MB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "disk4",
                  "offset": 12
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "0MB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setGvinumDiskFreeCapacity(String,String,String)"
            },
            "matchedColumns": [
              9
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 58601,
              "status": "passed"
            },
            "line": 69,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "matchedColumns": [
              1
            ],
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 70
              },
              {
                "cells": [
                  "system-disk-1",
                  "2GB",
                  "false"
                ],
                "line": 71
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 45145819,
              "status": "passed"
            },
            "line": 72,
            "name": "virtual disk system-disk-1 gets an availability expectation",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 13
                }
              ],
              "location": "PlannerDefs.createVirtualStorageAvailabilityExpectation(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 76449,
              "status": "passed"
            },
            "line": 73,
            "name": "the virtual disk system-disk-1 must be allocated on host-1.example.com under on the gvinum disks: disk1,disk2,disk3",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 17
                },
                {
                  "val": "host-1.example.com",
                  "offset": 52
                },
                {
                  "val": "disk1,disk2,disk3",
                  "offset": 98
                }
              ],
              "location": "PlannerDefs.checkGvinumConcatenated(String,String,String\u003e)"
            },
            "matchedColumns": [
              10
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 8540760,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 80,
        "name": "Create a large disk on multiple gvinum partitions",
        "description": "",
        "id": "storage-management;create-a-large-disk-on-multiple-gvinum-partitions;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 153895,
              "status": "passed"
            },
            "line": 51,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "matchedColumns": [
              0
            ],
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Dist. Version"
                ],
                "line": 52
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "BSD",
                  "FreeBSD",
                  "10"
                ],
                "line": 53
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 52601,
              "status": "passed"
            },
            "line": 54,
            "name": "Controller configuration \u0027gvinum create volume enabled\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "gvinum create volume enabled",
                  "offset": 26
                },
                {
                  "val": "enabled",
                  "offset": 59
                }
              ],
              "location": "PlannerDefs.setConfigurationBoolean(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 111455,
              "status": "passed"
            },
            "line": 55,
            "name": "host host-1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 56
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 57
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 144185,
              "status": "passed"
            },
            "line": 58,
            "name": "host host-1.example.com gvinum disks are:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostGvinumCapabilities(String,DataTable)"
            },
            "matchedColumns": [
              2,
              4,
              6,
              8
            ],
            "rows": [
              {
                "cells": [
                  "name",
                  "device",
                  "size"
                ],
                "line": 59
              },
              {
                "cells": [
                  "disk1",
                  "/dev/disk1",
                  "2GB"
                ],
                "line": 60
              },
              {
                "cells": [
                  "disk2",
                  "/dev/disk2",
                  "2GB"
                ],
                "line": 61
              },
              {
                "cells": [
                  "disk3",
                  "/dev/disk3",
                  "2GB"
                ],
                "line": 62
              },
              {
                "cells": [
                  "disk4",
                  "/dev/disk4",
                  "2GB"
                ],
                "line": 63
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 36864,
              "status": "passed"
            },
            "line": 64,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 69762,
              "status": "passed"
            },
            "line": 65,
            "name": "gvinum disk disk1 on host host-1.example.com has 0MB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "disk1",
                  "offset": 12
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "0MB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setGvinumDiskFreeCapacity(String,String,String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 76672,
              "status": "passed"
            },
            "line": 66,
            "name": "gvinum disk disk2 on host host-1.example.com has 800MB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "disk2",
                  "offset": 12
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "800MB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setGvinumDiskFreeCapacity(String,String,String)"
            },
            "matchedColumns": [
              5
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 441578,
              "status": "passed"
            },
            "line": 67,
            "name": "gvinum disk disk3 on host host-1.example.com has 800MB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "disk3",
                  "offset": 12
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "800MB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setGvinumDiskFreeCapacity(String,String,String)"
            },
            "matchedColumns": [
              7
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 92165,
              "status": "passed"
            },
            "line": 68,
            "name": "gvinum disk disk4 on host host-1.example.com has 800MB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "disk4",
                  "offset": 12
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "800MB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setGvinumDiskFreeCapacity(String,String,String)"
            },
            "matchedColumns": [
              9
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 81394,
              "status": "passed"
            },
            "line": 69,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "matchedColumns": [
              1
            ],
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 70
              },
              {
                "cells": [
                  "system-disk-1",
                  "2GB",
                  "false"
                ],
                "line": 71
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19478748,
              "status": "passed"
            },
            "line": 72,
            "name": "virtual disk system-disk-1 gets an availability expectation",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 13
                }
              ],
              "location": "PlannerDefs.createVirtualStorageAvailabilityExpectation(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 81927,
              "status": "passed"
            },
            "line": 73,
            "name": "the virtual disk system-disk-1 must be allocated on host-1.example.com under on the gvinum disks: disk2,disk3,disk4",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 17
                },
                {
                  "val": "host-1.example.com",
                  "offset": 52
                },
                {
                  "val": "disk2,disk3,disk4",
                  "offset": 98
                }
              ],
              "location": "PlannerDefs.checkGvinumConcatenated(String,String,String\u003e)"
            },
            "matchedColumns": [
              10
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 1596850,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 81,
        "name": "Create a large disk on multiple gvinum partitions",
        "description": "",
        "id": "storage-management;create-a-large-disk-on-multiple-gvinum-partitions;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 149690,
              "status": "passed"
            },
            "line": 51,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "matchedColumns": [
              0
            ],
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Dist. Version"
                ],
                "line": 52
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "BSD",
                  "FreeBSD",
                  "10"
                ],
                "line": 53
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 49322,
              "status": "passed"
            },
            "line": 54,
            "name": "Controller configuration \u0027gvinum create volume enabled\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "gvinum create volume enabled",
                  "offset": 26
                },
                {
                  "val": "enabled",
                  "offset": 59
                }
              ],
              "location": "PlannerDefs.setConfigurationBoolean(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 117969,
              "status": "passed"
            },
            "line": 55,
            "name": "host host-1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 56
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 57
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 124235,
              "status": "passed"
            },
            "line": 58,
            "name": "host host-1.example.com gvinum disks are:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostGvinumCapabilities(String,DataTable)"
            },
            "matchedColumns": [
              2,
              4,
              6,
              8
            ],
            "rows": [
              {
                "cells": [
                  "name",
                  "device",
                  "size"
                ],
                "line": 59
              },
              {
                "cells": [
                  "disk1",
                  "/dev/disk1",
                  "2GB"
                ],
                "line": 60
              },
              {
                "cells": [
                  "disk2",
                  "/dev/disk2",
                  "2GB"
                ],
                "line": 61
              },
              {
                "cells": [
                  "disk3",
                  "/dev/disk3",
                  "2GB"
                ],
                "line": 62
              },
              {
                "cells": [
                  "disk4",
                  "/dev/disk4",
                  "2GB"
                ],
                "line": 63
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 68339,
              "status": "passed"
            },
            "line": 64,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 121884,
              "status": "passed"
            },
            "line": 65,
            "name": "gvinum disk disk1 on host host-1.example.com has 0MB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "disk1",
                  "offset": 12
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "0MB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setGvinumDiskFreeCapacity(String,String,String)"
            },
            "matchedColumns": [
              3
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 56163,
              "status": "passed"
            },
            "line": 66,
            "name": "gvinum disk disk2 on host host-1.example.com has 0MB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "disk2",
                  "offset": 12
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "0MB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setGvinumDiskFreeCapacity(String,String,String)"
            },
            "matchedColumns": [
              5
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 58456,
              "status": "passed"
            },
            "line": 67,
            "name": "gvinum disk disk3 on host host-1.example.com has 1500MB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "disk3",
                  "offset": 12
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "1500MB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setGvinumDiskFreeCapacity(String,String,String)"
            },
            "matchedColumns": [
              7
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 58080,
              "status": "passed"
            },
            "line": 68,
            "name": "gvinum disk disk4 on host host-1.example.com has 1500MB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "disk4",
                  "offset": 12
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "1500MB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setGvinumDiskFreeCapacity(String,String,String)"
            },
            "matchedColumns": [
              9
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 82947,
              "status": "passed"
            },
            "line": 69,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "matchedColumns": [
              1
            ],
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 70
              },
              {
                "cells": [
                  "system-disk-1",
                  "2GB",
                  "false"
                ],
                "line": 71
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3683861,
              "status": "passed"
            },
            "line": 72,
            "name": "virtual disk system-disk-1 gets an availability expectation",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 13
                }
              ],
              "location": "PlannerDefs.createVirtualStorageAvailabilityExpectation(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 73153,
              "status": "passed"
            },
            "line": 73,
            "name": "the virtual disk system-disk-1 must be allocated on host-1.example.com under on the gvinum disks: disk2,disk3,disk4",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 17
                },
                {
                  "val": "host-1.example.com",
                  "offset": 52
                },
                {
                  "val": "disk2,disk3,disk4",
                  "offset": 98
                }
              ],
              "location": "PlannerDefs.checkGvinumConcatenated(String,String,String\u003e)"
            },
            "matchedColumns": [
              10
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 83,
            "value": "# In this story, host-1 can allocate the storage on only two disks, while host-2 needs at least 3"
          },
          {
            "line": 84,
            "value": "# since with the number of disks the risk of data loss rises, the allocation on host-1 is more favorable"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 592625,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 85,
        "name": "Creating concatenated disk on gvinum disks - less disks is better then more in the concatenated config",
        "description": "",
        "id": "storage-management;creating-concatenated-disk-on-gvinum-disks---less-disks-is-better-then-more-in-the-concatenated-config",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 146750,
              "status": "passed"
            },
            "line": 86,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Dist. Version"
                ],
                "line": 87
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "BSD",
                  "FreeBSD",
                  "10"
                ],
                "line": 88
              },
              {
                "cells": [
                  "host-2.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "BSD",
                  "FreeBSD",
                  "10"
                ],
                "line": 89
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 37872,
              "status": "passed"
            },
            "line": 90,
            "name": "Controller configuration \u0027gvinum create volume enabled\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "gvinum create volume enabled",
                  "offset": 26
                },
                {
                  "val": "enabled",
                  "offset": 59
                }
              ],
              "location": "PlannerDefs.setConfigurationBoolean(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 140311,
              "status": "passed"
            },
            "line": 91,
            "name": "host host-1.example.com gvinum disks are:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostGvinumCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "device",
                  "size"
                ],
                "line": 92
              },
              {
                "cells": [
                  "disk1",
                  "/dev/disk1",
                  "2GB"
                ],
                "line": 93
              },
              {
                "cells": [
                  "disk2",
                  "/dev/disk2",
                  "2GB"
                ],
                "line": 94
              },
              {
                "cells": [
                  "disk3",
                  "/dev/disk3",
                  "2GB"
                ],
                "line": 95
              },
              {
                "cells": [
                  "disk4",
                  "/dev/disk4",
                  "2GB"
                ],
                "line": 96
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 112807,
              "status": "passed"
            },
            "line": 97,
            "name": "host host-2.example.com gvinum disks are:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostGvinumCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "device",
                  "size"
                ],
                "line": 98
              },
              {
                "cells": [
                  "disk1",
                  "/dev/disk1",
                  "2GB"
                ],
                "line": 99
              },
              {
                "cells": [
                  "disk2",
                  "/dev/disk2",
                  "2GB"
                ],
                "line": 100
              },
              {
                "cells": [
                  "disk3",
                  "/dev/disk3",
                  "2GB"
                ],
                "line": 101
              },
              {
                "cells": [
                  "disk4",
                  "/dev/disk4",
                  "2GB"
                ],
                "line": 102
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25600,
              "status": "passed"
            },
            "line": 103,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18124,
              "status": "passed"
            },
            "line": 104,
            "name": "host host-2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 81506,
              "status": "passed"
            },
            "line": 105,
            "name": "gvinum disk disk1 on host host-1.example.com has 2GB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "disk1",
                  "offset": 12
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "2GB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setGvinumDiskFreeCapacity(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 61715,
              "status": "passed"
            },
            "line": 106,
            "name": "gvinum disk disk2 on host host-1.example.com has 2GB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "disk2",
                  "offset": 12
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "2GB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setGvinumDiskFreeCapacity(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 58142,
              "status": "passed"
            },
            "line": 107,
            "name": "gvinum disk disk3 on host host-1.example.com has 0GB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "disk3",
                  "offset": 12
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "0GB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setGvinumDiskFreeCapacity(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 58074,
              "status": "passed"
            },
            "line": 108,
            "name": "gvinum disk disk4 on host host-1.example.com has 0GB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "disk4",
                  "offset": 12
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "0GB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setGvinumDiskFreeCapacity(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 59485,
              "status": "passed"
            },
            "line": 109,
            "name": "gvinum disk disk1 on host host-2.example.com has 1GB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "disk1",
                  "offset": 12
                },
                {
                  "val": "host-2.example.com",
                  "offset": 26
                },
                {
                  "val": "1GB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setGvinumDiskFreeCapacity(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 53597,
              "status": "passed"
            },
            "line": 110,
            "name": "gvinum disk disk2 on host host-2.example.com has 1GB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "disk2",
                  "offset": 12
                },
                {
                  "val": "host-2.example.com",
                  "offset": 26
                },
                {
                  "val": "1GB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setGvinumDiskFreeCapacity(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 61022,
              "status": "passed"
            },
            "line": 111,
            "name": "gvinum disk disk3 on host host-2.example.com has 1GB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "disk3",
                  "offset": 12
                },
                {
                  "val": "host-2.example.com",
                  "offset": 26
                },
                {
                  "val": "1GB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setGvinumDiskFreeCapacity(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 55830,
              "status": "passed"
            },
            "line": 112,
            "name": "gvinum disk disk4 on host host-2.example.com has 1GB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "disk4",
                  "offset": 12
                },
                {
                  "val": "host-2.example.com",
                  "offset": 26
                },
                {
                  "val": "1GB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setGvinumDiskFreeCapacity(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 447035,
              "status": "passed"
            },
            "line": 113,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 114
              },
              {
                "cells": [
                  "system-disk-1",
                  "3GB",
                  "false"
                ],
                "line": 115
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6332020,
              "status": "passed"
            },
            "line": 116,
            "name": "virtual disk system-disk-1 gets an availability expectation",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 13
                }
              ],
              "location": "PlannerDefs.createVirtualStorageAvailabilityExpectation(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 64577,
              "status": "passed"
            },
            "line": 117,
            "name": "the virtual disk system-disk-1 must be allocated on host-1.example.com under on the gvinum disks: disk1,disk2",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 17
                },
                {
                  "val": "host-1.example.com",
                  "offset": 52
                },
                {
                  "val": "disk1,disk2",
                  "offset": 98
                }
              ],
              "location": "PlannerDefs.checkGvinumConcatenated(String,String,String\u003e)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 841768,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 160,
        "name": "Share an existing disk with ISCSI on a BSD to start the VM on Linux",
        "description": "",
        "id": "storage-management;share-an-existing-disk-with-iscsi-on-a-bsd-to-start-the-vm-on-linux;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 159150,
              "status": "passed"
            },
            "line": 121,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              4,
              5,
              6
            ],
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Dist. Version"
                ],
                "line": 122
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "BSD",
                  "FreeBSD",
                  "10"
                ],
                "line": 123
              },
              {
                "cells": [
                  "host-2.example.com",
                  "8 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7.1"
                ],
                "line": 124
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 356030,
              "status": "passed"
            },
            "line": 125,
            "name": "Controller configuration \u0027gvinum create volume enabled\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "gvinum create volume enabled",
                  "offset": 26
                },
                {
                  "val": "enabled",
                  "offset": 59
                }
              ],
              "location": "PlannerDefs.setConfigurationBoolean(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 111537,
              "status": "passed"
            },
            "line": 126,
            "name": "host host-1.example.com gvinum disks are:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostGvinumCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "device",
                  "size"
                ],
                "line": 127
              },
              {
                "cells": [
                  "test",
                  "/dev/test",
                  "1 TB"
                ],
                "line": 128
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17996,
              "status": "passed"
            },
            "line": 129,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11874,
              "status": "passed"
            },
            "line": 130,
            "name": "host host-2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 77850,
              "status": "passed"
            },
            "line": 131,
            "name": "host host-1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 132
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 133
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 81058,
              "status": "passed"
            },
            "line": 134,
            "name": "host host-2.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 135
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 136
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 64975,
              "status": "passed"
            },
            "line": 137,
            "name": "software installed on host host-2.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              3,
              7
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 138
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 139
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 140
              },
              {
                "cells": [
                  "-",
                  "1.0"
                ],
                "line": 141
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 52767,
              "status": "passed"
            },
            "line": 142,
            "name": "software installed on host host-1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              7
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 143
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 144
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 145
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 63184,
              "status": "passed"
            },
            "line": 146,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 147
              },
              {
                "cells": [
                  "system-disk-1",
                  "2 GB",
                  "false"
                ],
                "line": 148
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 352257,
              "status": "passed"
            },
            "line": 149,
            "name": "virtual storage system-disk-1 allocated on host host-1.example.com using simple gvinum disk name test",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 16
                },
                {
                  "val": "host-1.example.com",
                  "offset": 48
                },
                {
                  "val": "test",
                  "offset": 97
                }
              ],
              "location": "PlannerDefs.createVirtualStorageGvinumAllocation(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 97893,
              "status": "passed"
            },
            "line": 150,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 151
              },
              {
                "cells": [
                  "vm1",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 152
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 32905,
              "status": "passed"
            },
            "line": 153,
            "name": "system-disk-1 is attached to vm1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "vm1",
                  "offset": 29
                }
              ],
              "location": "PlannerDefs.attachDiskToVm(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4415564,
              "status": "passed"
            },
            "line": 154,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 177129,
              "status": "passed"
            },
            "line": 155,
            "name": "system-disk-1 must be shared with iscsi on host host-1.example.com as step 1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "host-1.example.com",
                  "offset": 48
                },
                {
                  "val": "1",
                  "offset": 75
                }
              ],
              "location": "PlannerDefs.verifyDiskIscsiShare(String,String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 35756,
              "status": "passed"
            },
            "line": 156,
            "name": "VM vm1 gets scheduled on host host-2.example.com as step 2",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "host-2.example.com",
                  "offset": 30
                },
                {
                  "val": "2",
                  "offset": 57
                }
              ],
              "location": "PlannerDefs.verifyVmGetsScheduledWithStepNumber(String,String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 486685,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 161,
        "name": "Share an existing disk with ISCSI on a BSD to start the VM on Linux",
        "description": "",
        "id": "storage-management;share-an-existing-disk-with-iscsi-on-a-bsd-to-start-the-vm-on-linux;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 211987,
              "status": "passed"
            },
            "line": 121,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              4,
              5,
              6
            ],
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Dist. Version"
                ],
                "line": 122
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "BSD",
                  "FreeBSD",
                  "10"
                ],
                "line": 123
              },
              {
                "cells": [
                  "host-2.example.com",
                  "8 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Fedora",
                  "22"
                ],
                "line": 124
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 69245,
              "status": "passed"
            },
            "line": 125,
            "name": "Controller configuration \u0027gvinum create volume enabled\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "gvinum create volume enabled",
                  "offset": 26
                },
                {
                  "val": "enabled",
                  "offset": 59
                }
              ],
              "location": "PlannerDefs.setConfigurationBoolean(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 115631,
              "status": "passed"
            },
            "line": 126,
            "name": "host host-1.example.com gvinum disks are:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostGvinumCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "device",
                  "size"
                ],
                "line": 127
              },
              {
                "cells": [
                  "test",
                  "/dev/test",
                  "1 TB"
                ],
                "line": 128
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 26576,
              "status": "passed"
            },
            "line": 129,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24315,
              "status": "passed"
            },
            "line": 130,
            "name": "host host-2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 623692,
              "status": "passed"
            },
            "line": 131,
            "name": "host host-1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 132
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 133
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6926886,
              "status": "passed"
            },
            "line": 134,
            "name": "host host-2.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 135
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 136
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 132992,
              "status": "passed"
            },
            "line": 137,
            "name": "software installed on host host-2.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              3,
              7
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 138
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 139
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 140
              },
              {
                "cells": [
                  "-",
                  "1.0"
                ],
                "line": 141
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 77440,
              "status": "passed"
            },
            "line": 142,
            "name": "software installed on host host-1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              7
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 143
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 144
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 145
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 69126,
              "status": "passed"
            },
            "line": 146,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 147
              },
              {
                "cells": [
                  "system-disk-1",
                  "2 GB",
                  "false"
                ],
                "line": 148
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 81195,
              "status": "passed"
            },
            "line": 149,
            "name": "virtual storage system-disk-1 allocated on host host-1.example.com using simple gvinum disk name test",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 16
                },
                {
                  "val": "host-1.example.com",
                  "offset": 48
                },
                {
                  "val": "test",
                  "offset": 97
                }
              ],
              "location": "PlannerDefs.createVirtualStorageGvinumAllocation(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 113786,
              "status": "passed"
            },
            "line": 150,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 151
              },
              {
                "cells": [
                  "vm1",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 152
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 40789,
              "status": "passed"
            },
            "line": 153,
            "name": "system-disk-1 is attached to vm1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "vm1",
                  "offset": 29
                }
              ],
              "location": "PlannerDefs.attachDiskToVm(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5576104,
              "status": "passed"
            },
            "line": 154,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 137926,
              "status": "passed"
            },
            "line": 155,
            "name": "system-disk-1 must be shared with iscsi on host host-1.example.com as step 1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "host-1.example.com",
                  "offset": 48
                },
                {
                  "val": "1",
                  "offset": 75
                }
              ],
              "location": "PlannerDefs.verifyDiskIscsiShare(String,String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 64784,
              "status": "passed"
            },
            "line": 156,
            "name": "VM vm1 gets scheduled on host host-2.example.com as step 2",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "host-2.example.com",
                  "offset": 30
                },
                {
                  "val": "2",
                  "offset": 57
                }
              ],
              "location": "PlannerDefs.verifyVmGetsScheduledWithStepNumber(String,String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3090834,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 162,
        "name": "Share an existing disk with ISCSI on a BSD to start the VM on Linux",
        "description": "",
        "id": "storage-management;share-an-existing-disk-with-iscsi-on-a-bsd-to-start-the-vm-on-linux;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 263645,
              "status": "passed"
            },
            "line": 121,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              4,
              5,
              6
            ],
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Dist. Version"
                ],
                "line": 122
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "BSD",
                  "FreeBSD",
                  "10"
                ],
                "line": 123
              },
              {
                "cells": [
                  "host-2.example.com",
                  "8 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "openSUSE",
                  "13"
                ],
                "line": 124
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 46709,
              "status": "passed"
            },
            "line": 125,
            "name": "Controller configuration \u0027gvinum create volume enabled\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "gvinum create volume enabled",
                  "offset": 26
                },
                {
                  "val": "enabled",
                  "offset": 59
                }
              ],
              "location": "PlannerDefs.setConfigurationBoolean(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 130186,
              "status": "passed"
            },
            "line": 126,
            "name": "host host-1.example.com gvinum disks are:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostGvinumCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "device",
                  "size"
                ],
                "line": 127
              },
              {
                "cells": [
                  "test",
                  "/dev/test",
                  "1 TB"
                ],
                "line": 128
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 31837,
              "status": "passed"
            },
            "line": 129,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 26225,
              "status": "passed"
            },
            "line": 130,
            "name": "host host-2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 110221,
              "status": "passed"
            },
            "line": 131,
            "name": "host host-1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 132
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 133
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 90114,
              "status": "passed"
            },
            "line": 134,
            "name": "host host-2.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 135
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 136
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 72917,
              "status": "passed"
            },
            "line": 137,
            "name": "software installed on host host-2.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              3,
              7
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 138
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 139
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 140
              },
              {
                "cells": [
                  "-",
                  "1.0"
                ],
                "line": 141
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 54250,
              "status": "passed"
            },
            "line": 142,
            "name": "software installed on host host-1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              7
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 143
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 144
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 145
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 91450,
              "status": "passed"
            },
            "line": 146,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 147
              },
              {
                "cells": [
                  "system-disk-1",
                  "2 GB",
                  "false"
                ],
                "line": 148
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 71100,
              "status": "passed"
            },
            "line": 149,
            "name": "virtual storage system-disk-1 allocated on host host-1.example.com using simple gvinum disk name test",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 16
                },
                {
                  "val": "host-1.example.com",
                  "offset": 48
                },
                {
                  "val": "test",
                  "offset": 97
                }
              ],
              "location": "PlannerDefs.createVirtualStorageGvinumAllocation(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 158485,
              "status": "passed"
            },
            "line": 150,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 151
              },
              {
                "cells": [
                  "vm1",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 152
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 45071,
              "status": "passed"
            },
            "line": 153,
            "name": "system-disk-1 is attached to vm1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "vm1",
                  "offset": 29
                }
              ],
              "location": "PlannerDefs.attachDiskToVm(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10458195,
              "status": "passed"
            },
            "line": 154,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 144095,
              "status": "passed"
            },
            "line": 155,
            "name": "system-disk-1 must be shared with iscsi on host host-1.example.com as step 1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "host-1.example.com",
                  "offset": 48
                },
                {
                  "val": "1",
                  "offset": 75
                }
              ],
              "location": "PlannerDefs.verifyDiskIscsiShare(String,String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 64030,
              "status": "passed"
            },
            "line": 156,
            "name": "VM vm1 gets scheduled on host host-2.example.com as step 2",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "host-2.example.com",
                  "offset": 30
                },
                {
                  "val": "2",
                  "offset": 57
                }
              ],
              "location": "PlannerDefs.verifyVmGetsScheduledWithStepNumber(String,String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2666479,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 206,
        "name": "Disk already shared with iscsi",
        "description": "",
        "id": "storage-management;disk-already-shared-with-iscsi;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 223626,
              "status": "passed"
            },
            "line": 166,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Distro Version"
                ],
                "line": 167
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Fedora",
                  "23"
                ],
                "line": 168
              },
              {
                "cells": [
                  "host-2.example.com",
                  "8 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Fedora",
                  "23"
                ],
                "line": 169
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 218054,
              "status": "passed"
            },
            "line": 170,
            "name": "host host-1.example.com volume groups are:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostLvmCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "vg name",
                  "size",
                  "pvs"
                ],
                "line": 171
              },
              {
                "cells": [
                  "vg-1",
                  "512 GB",
                  "/dev/sda: 128 GB, /dev/sdb: 128 GB, /dev/sdc: 128 GB, /dev/sdd: 128 GB"
                ],
                "line": 172
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 43656,
              "status": "passed"
            },
            "line": 173,
            "name": "Controller configuration \u0027lvm create volume enabled\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "lvm create volume enabled",
                  "offset": 26
                },
                {
                  "val": "enabled",
                  "offset": 56
                }
              ],
              "location": "PlannerDefs.setConfigurationBoolean(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 28968,
              "status": "passed"
            },
            "line": 174,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24109,
              "status": "passed"
            },
            "line": 175,
            "name": "host host-2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 122105,
              "status": "passed"
            },
            "line": 176,
            "name": "host host-1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 177
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 178
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 100433,
              "status": "passed"
            },
            "line": 179,
            "name": "host host-2.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 180
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 181
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 83345,
              "status": "passed"
            },
            "line": 182,
            "name": "software installed on host host-1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 183
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 184
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 185
              },
              {
                "cells": [
                  "scsi-target-utils",
                  "1.0.5"
                ],
                "line": 186
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 70214,
              "status": "passed"
            },
            "line": 187,
            "name": "software installed on host host-2.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 188
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 189
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 190
              },
              {
                "cells": [
                  "scsi-target-utils",
                  "1.0.5"
                ],
                "line": 191
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 66249,
              "status": "passed"
            },
            "line": 192,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 193
              },
              {
                "cells": [
                  "system-disk-1",
                  "2 GB",
                  "false"
                ],
                "line": 194
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 58195,
              "status": "passed"
            },
            "line": 195,
            "name": "system-disk-1 is allocated on host host-1.example.com volume group vg-1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "host-1.example.com",
                  "offset": 35
                },
                {
                  "val": "vg-1",
                  "offset": 67
                }
              ],
              "location": "PlannerDefs.createLvmAllocation(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 71126,
              "status": "passed"
            },
            "line": 196,
            "name": "system-disk-1 is shared with iscsi on host host-1.example.com",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "host-1.example.com",
                  "offset": 43
                }
              ],
              "location": "PlannerDefs.createIscsiShare(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 122104,
              "status": "passed"
            },
            "line": 197,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 198
              },
              {
                "cells": [
                  "vm1",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 199
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 61490,
              "status": "passed"
            },
            "line": 200,
            "name": "system-disk-1 is attached to vm1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "vm1",
                  "offset": 29
                }
              ],
              "location": "PlannerDefs.attachDiskToVm(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7541510,
              "status": "passed"
            },
            "line": 201,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 76494,
              "status": "passed"
            },
            "line": 202,
            "name": "VM vm1 gets scheduled on host host-2.example.com as step 1",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "host-2.example.com",
                  "offset": 30
                },
                {
                  "val": "1",
                  "offset": 57
                }
              ],
              "location": "PlannerDefs.verifyVmGetsScheduledWithStepNumber(String,String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 677991,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 207,
        "name": "Disk already shared with iscsi",
        "description": "",
        "id": "storage-management;disk-already-shared-with-iscsi;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 228005,
              "status": "passed"
            },
            "line": 166,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Distro Version"
                ],
                "line": 167
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "openSUSE",
                  "13"
                ],
                "line": 168
              },
              {
                "cells": [
                  "host-2.example.com",
                  "8 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "openSUSE",
                  "13"
                ],
                "line": 169
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 209186,
              "status": "passed"
            },
            "line": 170,
            "name": "host host-1.example.com volume groups are:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostLvmCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "vg name",
                  "size",
                  "pvs"
                ],
                "line": 171
              },
              {
                "cells": [
                  "vg-1",
                  "512 GB",
                  "/dev/sda: 128 GB, /dev/sdb: 128 GB, /dev/sdc: 128 GB, /dev/sdd: 128 GB"
                ],
                "line": 172
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 39686,
              "status": "passed"
            },
            "line": 173,
            "name": "Controller configuration \u0027lvm create volume enabled\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "lvm create volume enabled",
                  "offset": 26
                },
                {
                  "val": "enabled",
                  "offset": 56
                }
              ],
              "location": "PlannerDefs.setConfigurationBoolean(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 27304,
              "status": "passed"
            },
            "line": 174,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22014,
              "status": "passed"
            },
            "line": 175,
            "name": "host host-2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 112777,
              "status": "passed"
            },
            "line": 176,
            "name": "host host-1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 177
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 178
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 97597,
              "status": "passed"
            },
            "line": 179,
            "name": "host host-2.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 180
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 181
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 179445,
              "status": "passed"
            },
            "line": 182,
            "name": "software installed on host host-1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 183
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 184
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 185
              },
              {
                "cells": [
                  "tgt",
                  "1.0.5"
                ],
                "line": 186
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 93039,
              "status": "passed"
            },
            "line": 187,
            "name": "software installed on host host-2.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 188
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 189
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 190
              },
              {
                "cells": [
                  "tgt",
                  "1.0.5"
                ],
                "line": 191
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 70753,
              "status": "passed"
            },
            "line": 192,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 193
              },
              {
                "cells": [
                  "system-disk-1",
                  "2 GB",
                  "false"
                ],
                "line": 194
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 59138,
              "status": "passed"
            },
            "line": 195,
            "name": "system-disk-1 is allocated on host host-1.example.com volume group vg-1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "host-1.example.com",
                  "offset": 35
                },
                {
                  "val": "vg-1",
                  "offset": 67
                }
              ],
              "location": "PlannerDefs.createLvmAllocation(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 38073,
              "status": "passed"
            },
            "line": 196,
            "name": "system-disk-1 is shared with iscsi on host host-1.example.com",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "host-1.example.com",
                  "offset": 43
                }
              ],
              "location": "PlannerDefs.createIscsiShare(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 124732,
              "status": "passed"
            },
            "line": 197,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 198
              },
              {
                "cells": [
                  "vm1",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 199
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 44458,
              "status": "passed"
            },
            "line": 200,
            "name": "system-disk-1 is attached to vm1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "vm1",
                  "offset": 29
                }
              ],
              "location": "PlannerDefs.attachDiskToVm(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6708595,
              "status": "passed"
            },
            "line": 201,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 81156,
              "status": "passed"
            },
            "line": 202,
            "name": "VM vm1 gets scheduled on host host-2.example.com as step 1",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "host-2.example.com",
                  "offset": 30
                },
                {
                  "val": "1",
                  "offset": 57
                }
              ],
              "location": "PlannerDefs.verifyVmGetsScheduledWithStepNumber(String,String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 5657501,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 208,
        "name": "Disk already shared with iscsi",
        "description": "",
        "id": "storage-management;disk-already-shared-with-iscsi;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 234106,
              "status": "passed"
            },
            "line": 166,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Distro Version"
                ],
                "line": 167
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7.1"
                ],
                "line": 168
              },
              {
                "cells": [
                  "host-2.example.com",
                  "8 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7.1"
                ],
                "line": 169
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 298699,
              "status": "passed"
            },
            "line": 170,
            "name": "host host-1.example.com volume groups are:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostLvmCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "vg name",
                  "size",
                  "pvs"
                ],
                "line": 171
              },
              {
                "cells": [
                  "vg-1",
                  "512 GB",
                  "/dev/sda: 128 GB, /dev/sdb: 128 GB, /dev/sdc: 128 GB, /dev/sdd: 128 GB"
                ],
                "line": 172
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 52134,
              "status": "passed"
            },
            "line": 173,
            "name": "Controller configuration \u0027lvm create volume enabled\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "lvm create volume enabled",
                  "offset": 26
                },
                {
                  "val": "enabled",
                  "offset": 56
                }
              ],
              "location": "PlannerDefs.setConfigurationBoolean(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 36540,
              "status": "passed"
            },
            "line": 174,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22942,
              "status": "passed"
            },
            "line": 175,
            "name": "host host-2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 118789,
              "status": "passed"
            },
            "line": 176,
            "name": "host host-1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 177
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 178
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 107299,
              "status": "passed"
            },
            "line": 179,
            "name": "host host-2.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 180
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 181
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 79262,
              "status": "passed"
            },
            "line": 182,
            "name": "software installed on host host-1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 183
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 184
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 185
              },
              {
                "cells": [
                  "scsi-target-utils",
                  "1.0.5"
                ],
                "line": 186
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 71256,
              "status": "passed"
            },
            "line": 187,
            "name": "software installed on host host-2.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 188
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 189
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 190
              },
              {
                "cells": [
                  "scsi-target-utils",
                  "1.0.5"
                ],
                "line": 191
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 61262,
              "status": "passed"
            },
            "line": 192,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 193
              },
              {
                "cells": [
                  "system-disk-1",
                  "2 GB",
                  "false"
                ],
                "line": 194
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 58536,
              "status": "passed"
            },
            "line": 195,
            "name": "system-disk-1 is allocated on host host-1.example.com volume group vg-1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "host-1.example.com",
                  "offset": 35
                },
                {
                  "val": "vg-1",
                  "offset": 67
                }
              ],
              "location": "PlannerDefs.createLvmAllocation(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 33902,
              "status": "passed"
            },
            "line": 196,
            "name": "system-disk-1 is shared with iscsi on host host-1.example.com",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "host-1.example.com",
                  "offset": 43
                }
              ],
              "location": "PlannerDefs.createIscsiShare(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 127980,
              "status": "passed"
            },
            "line": 197,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 198
              },
              {
                "cells": [
                  "vm1",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 199
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 45068,
              "status": "passed"
            },
            "line": 200,
            "name": "system-disk-1 is attached to vm1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "vm1",
                  "offset": 29
                }
              ],
              "location": "PlannerDefs.attachDiskToVm(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2769470,
              "status": "passed"
            },
            "line": 201,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 425313,
              "status": "passed"
            },
            "line": 202,
            "name": "VM vm1 gets scheduled on host host-2.example.com as step 1",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "host-2.example.com",
                  "offset": 30
                },
                {
                  "val": "1",
                  "offset": 57
                }
              ],
              "location": "PlannerDefs.verifyVmGetsScheduledWithStepNumber(String,String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2840449,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 210,
        "name": "Unallocated disk removed",
        "description": "",
        "id": "storage-management;unallocated-disk-removed",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 158347,
              "status": "passed"
            },
            "line": 211,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Distro Version"
                ],
                "line": 212
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7,1"
                ],
                "line": 213
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 122052,
              "status": "passed"
            },
            "line": 214,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 215
              },
              {
                "cells": [
                  "test-disk-1",
                  "2 GB",
                  "false"
                ],
                "line": 216
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2215834,
              "status": "passed"
            },
            "line": 217,
            "name": "disk test-disk-1 is recycled",
            "match": {
              "arguments": [
                {
                  "val": "test-disk-1",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.recycleVirtualStorage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 95674,
              "status": "passed"
            },
            "line": 218,
            "name": "disk test-disk-1 will be deleted as step 1",
            "match": {
              "arguments": [
                {
                  "val": "test-disk-1",
                  "offset": 5
                },
                {
                  "val": "1",
                  "offset": 41
                }
              ],
              "location": "PlannerDefs.verifyDiskRemove(String,int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 540909,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 220,
        "name": "Disk allocated on fs mount point /kerub removed",
        "description": "",
        "id": "storage-management;disk-allocated-on-fs-mount-point-/kerub-removed",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 160413,
              "status": "passed"
            },
            "line": 221,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Distro Version"
                ],
                "line": 222
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7.1"
                ],
                "line": 223
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 129063,
              "status": "passed"
            },
            "line": 224,
            "name": "host host-1.example.com filesystem is:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostFilesystemCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mount",
                  "size",
                  "-",
                  "type"
                ],
                "line": 225
              },
              {
                "cells": [
                  "/kerub",
                  "1 TB",
                  "",
                  "ext4"
                ],
                "line": 226
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22949,
              "status": "passed"
            },
            "line": 227,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 62815,
              "status": "passed"
            },
            "line": 228,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 229
              },
              {
                "cells": [
                  "test-disk-1",
                  "2 GB",
                  "false"
                ],
                "line": 230
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 387511,
              "status": "passed"
            },
            "line": 231,
            "name": "virtual storage test-disk-1 allocated on host host-1.example.com using fs mount point /kerub",
            "match": {
              "arguments": [
                {
                  "val": "test-disk-1",
                  "offset": 16
                },
                {
                  "val": "host-1.example.com",
                  "offset": 46
                },
                {
                  "val": "/kerub",
                  "offset": 86
                }
              ],
              "location": "PlannerDefs.createVirtualStorageFsAllocation(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2370226,
              "status": "passed"
            },
            "line": 232,
            "name": "disk test-disk-1 is recycled",
            "match": {
              "arguments": [
                {
                  "val": "test-disk-1",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.recycleVirtualStorage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 90201,
              "status": "passed"
            },
            "line": 233,
            "name": "disk test-disk-1 will be unallocated as step 1",
            "match": {
              "arguments": [
                {
                  "val": "test-disk-1",
                  "offset": 5
                },
                {
                  "val": "1",
                  "offset": 45
                }
              ],
              "location": "PlannerDefs.verifyDiskUnalloction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 78032,
              "status": "passed"
            },
            "line": 234,
            "name": "disk test-disk-1 will be deleted as step 2",
            "match": {
              "arguments": [
                {
                  "val": "test-disk-1",
                  "offset": 5
                },
                {
                  "val": "2",
                  "offset": 41
                }
              ],
              "location": "PlannerDefs.verifyDiskRemove(String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 579029,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 236,
        "name": "Disk allocated on lvm volume group kerub",
        "description": "",
        "id": "storage-management;disk-allocated-on-lvm-volume-group-kerub",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 140962,
              "status": "passed"
            },
            "line": 237,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Distro Version"
                ],
                "line": 238
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7.1"
                ],
                "line": 239
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 132864,
              "status": "passed"
            },
            "line": 240,
            "name": "host host-1.example.com volume groups are:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostLvmCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "vg",
                  "size",
                  "devices"
                ],
                "line": 241
              },
              {
                "cells": [
                  "kerub",
                  "1 TB",
                  "/dev/sda: 1 TB"
                ],
                "line": 242
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21063,
              "status": "passed"
            },
            "line": 243,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 84033,
              "status": "passed"
            },
            "line": 244,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 245
              },
              {
                "cells": [
                  "test-disk-1",
                  "2 GB",
                  "false"
                ],
                "line": 246
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 377169,
              "status": "passed"
            },
            "line": 247,
            "name": "virtual storage test-disk-1 allocated on host host-1.example.com using lvm volume group kerub",
            "match": {
              "arguments": [
                {
                  "val": "test-disk-1",
                  "offset": 16
                },
                {
                  "val": "host-1.example.com",
                  "offset": 46
                },
                {
                  "val": "kerub",
                  "offset": 88
                }
              ],
              "location": "PlannerDefs.createVirtualStorageLvmAllocation(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1503391,
              "status": "passed"
            },
            "line": 248,
            "name": "disk test-disk-1 is recycled",
            "match": {
              "arguments": [
                {
                  "val": "test-disk-1",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.recycleVirtualStorage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 73879,
              "status": "passed"
            },
            "line": 249,
            "name": "disk test-disk-1 will be unallocated as step 1",
            "match": {
              "arguments": [
                {
                  "val": "test-disk-1",
                  "offset": 5
                },
                {
                  "val": "1",
                  "offset": 45
                }
              ],
              "location": "PlannerDefs.verifyDiskUnalloction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 42349,
              "status": "passed"
            },
            "line": 250,
            "name": "disk test-disk-1 will be deleted as step 2",
            "match": {
              "arguments": [
                {
                  "val": "test-disk-1",
                  "offset": 5
                },
                {
                  "val": "2",
                  "offset": 41
                }
              ],
              "location": "PlannerDefs.verifyDiskRemove(String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 552386,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 252,
        "name": "Disk allocated on simple gvinum disk id 5e5bf833-d54a-4732-b46b-7a987f905723",
        "description": "",
        "id": "storage-management;disk-allocated-on-simple-gvinum-disk-id-5e5bf833-d54a-4732-b46b-7a987f905723",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 98001,
              "status": "passed"
            },
            "line": 253,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Distro Version"
                ],
                "line": 254
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "BSD",
                  "FreeBSD",
                  "1.1"
                ],
                "line": 255
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 106102,
              "status": "passed"
            },
            "line": 256,
            "name": "host host-1.example.com gvinum disks are:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostGvinumCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "device",
                  "name",
                  "size"
                ],
                "line": 257
              },
              {
                "cells": [
                  "sda1",
                  "sda1",
                  "1 TB"
                ],
                "line": 258
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18259,
              "status": "passed"
            },
            "line": 259,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 41066,
              "status": "passed"
            },
            "line": 260,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 261
              },
              {
                "cells": [
                  "test-disk-1",
                  "2 GB",
                  "false"
                ],
                "line": 262
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 50342,
              "status": "passed"
            },
            "line": 263,
            "name": "virtual storage test-disk-1 allocated on host host-1.example.com using simple gvinum disk name sda1",
            "match": {
              "arguments": [
                {
                  "val": "test-disk-1",
                  "offset": 16
                },
                {
                  "val": "host-1.example.com",
                  "offset": 46
                },
                {
                  "val": "sda1",
                  "offset": 95
                }
              ],
              "location": "PlannerDefs.createVirtualStorageGvinumAllocation(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3209174,
              "status": "passed"
            },
            "line": 264,
            "name": "disk test-disk-1 is recycled",
            "match": {
              "arguments": [
                {
                  "val": "test-disk-1",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.recycleVirtualStorage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 73530,
              "status": "passed"
            },
            "line": 265,
            "name": "disk test-disk-1 will be unallocated as step 1",
            "match": {
              "arguments": [
                {
                  "val": "test-disk-1",
                  "offset": 5
                },
                {
                  "val": "1",
                  "offset": 45
                }
              ],
              "location": "PlannerDefs.verifyDiskUnalloction(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 45624,
              "status": "passed"
            },
            "line": 266,
            "name": "disk test-disk-1 will be deleted as step 2",
            "match": {
              "arguments": [
                {
                  "val": "test-disk-1",
                  "offset": 5
                },
                {
                  "val": "2",
                  "offset": 41
                }
              ],
              "location": "PlannerDefs.verifyDiskRemove(String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 4927622,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 268,
        "name": "LVM Thin Provisioning",
        "description": "",
        "id": "storage-management;lvm-thin-provisioning",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 110257,
              "status": "passed"
            },
            "line": 269,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Distro Version"
                ],
                "line": 270
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7.1"
                ],
                "line": 271
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 515588,
              "status": "passed"
            },
            "line": 272,
            "name": "host host-1.example.com volume groups are:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostLvmCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "vg name",
                  "size",
                  "pvs"
                ],
                "line": 273
              },
              {
                "cells": [
                  "vg-1",
                  "500 GB",
                  "/dev/sda: 500 GB"
                ],
                "line": 274
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 68773,
              "status": "passed"
            },
            "line": 275,
            "name": "software installed on host host-1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 276
              },
              {
                "cells": [
                  "lvm2",
                  "2.4.1"
                ],
                "line": 277
              },
              {
                "cells": [
                  "device-mapper-persistent-data",
                  "1.2.3"
                ],
                "line": 278
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 53885,
              "status": "passed"
            },
            "line": 279,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 280
              },
              {
                "cells": [
                  "test-disk-1",
                  "1 TB",
                  "false"
                ],
                "line": 281
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 35153,
              "status": "passed"
            },
            "line": 282,
            "name": "Controller configuration \u0027lvm create volume enabled\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "lvm create volume enabled",
                  "offset": 26
                },
                {
                  "val": "enabled",
                  "offset": 56
                }
              ],
              "location": "PlannerDefs.setConfigurationBoolean(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21943,
              "status": "passed"
            },
            "line": 283,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 65471,
              "status": "passed"
            },
            "line": 284,
            "name": "volume group vg-1 on host host-1.example.com has 200GB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "vg-1",
                  "offset": 13
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "200GB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setVolumeGroupFreeCapacity(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 33260400,
              "status": "passed"
            },
            "line": 285,
            "name": "virtual disk test-disk-1 gets an availability expectation",
            "match": {
              "arguments": [
                {
                  "val": "test-disk-1",
                  "offset": 13
                }
              ],
              "location": "PlannerDefs.createVirtualStorageAvailabilityExpectation(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 101400,
              "status": "passed"
            },
            "line": 286,
            "name": "the virtual disk test-disk-1 must be thin-allocated on host-1.example.com under on the volume group vg-1",
            "match": {
              "arguments": [
                {
                  "val": "test-disk-1",
                  "offset": 17
                },
                {
                  "val": "host-1.example.com",
                  "offset": 55
                },
                {
                  "val": "vg-1",
                  "offset": 100
                }
              ],
              "location": "PlannerDefs.verifyVirtualStorageCreatedOnLvmThin(String,String,String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 426236,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 288,
        "name": "LVM and storage redundancy",
        "description": "",
        "id": "storage-management;lvm-and-storage-redundancy",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 200461,
              "status": "passed"
            },
            "line": 289,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Distro Version"
                ],
                "line": 290
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7.1"
                ],
                "line": 291
              },
              {
                "cells": [
                  "host-2.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7.1"
                ],
                "line": 292
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 187324,
              "status": "passed"
            },
            "line": 293,
            "name": "host host-2.example.com volume groups are:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostLvmCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "vg name",
                  "size",
                  "pvs"
                ],
                "line": 294
              },
              {
                "cells": [
                  "vg-2",
                  "1024 GB",
                  "/dev/sda: 512 GB, /dev/sdb: 512 GB"
                ],
                "line": 295
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 115342,
              "status": "passed"
            },
            "line": 296,
            "name": "host host-1.example.com volume groups are:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostLvmCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "vg name",
                  "size",
                  "pvs"
                ],
                "line": 297
              },
              {
                "cells": [
                  "vg-1",
                  "512 GB",
                  "/dev/sda: 512 GB"
                ],
                "line": 298
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 43178,
              "status": "passed"
            },
            "line": 299,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 300
              },
              {
                "cells": [
                  "test-disk-1",
                  "300 GB",
                  "false"
                ],
                "line": 301
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 28290,
              "status": "passed"
            },
            "line": 302,
            "name": "Controller configuration \u0027lvm create volume enabled\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "lvm create volume enabled",
                  "offset": 26
                },
                {
                  "val": "enabled",
                  "offset": 56
                }
              ],
              "location": "PlannerDefs.setConfigurationBoolean(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21228,
              "status": "passed"
            },
            "line": 303,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 60499,
              "status": "passed"
            },
            "line": 304,
            "name": "volume group vg-1 on host host-1.example.com has 500GB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "vg-1",
                  "offset": 13
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "500GB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setVolumeGroupFreeCapacity(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 26254,
              "status": "passed"
            },
            "line": 305,
            "name": "host host-2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 55863,
              "status": "passed"
            },
            "line": 306,
            "name": "volume group vg-2 on host host-2.example.com has 800GB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "vg-2",
                  "offset": 13
                },
                {
                  "val": "host-2.example.com",
                  "offset": 26
                },
                {
                  "val": "800GB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setVolumeGroupFreeCapacity(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 276339,
              "status": "passed"
            },
            "line": 307,
            "name": "test-disk-1 has storage redundancy expectation: 1 copies",
            "match": {
              "arguments": [
                {
                  "val": "test-disk-1",
                  "offset": 0
                },
                {
                  "val": "1",
                  "offset": 48
                }
              ],
              "location": "PlannerDefs.setStorageRedundancyExpectation(String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5462949,
              "status": "passed"
            },
            "line": 308,
            "name": "virtual disk test-disk-1 gets an availability expectation",
            "match": {
              "arguments": [
                {
                  "val": "test-disk-1",
                  "offset": 13
                }
              ],
              "location": "PlannerDefs.createVirtualStorageAvailabilityExpectation(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 50448,
              "status": "passed"
            },
            "line": 309,
            "name": "the virtual disk test-disk-1 must be allocated on host-2.example.com under on the volume group vg-2",
            "match": {
              "arguments": [
                {
                  "val": "test-disk-1",
                  "offset": 17
                },
                {
                  "val": "host-2.example.com",
                  "offset": 50
                },
                {
                  "val": "vg-2",
                  "offset": 95
                }
              ],
              "location": "PlannerDefs.verifyVirtualStorageCreatedOnLvm(String,String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 64669,
              "status": "passed"
            },
            "line": 310,
            "name": "the virtual disk test-disk-1 must be mirrored using lvm - 1 mirrors as step 2",
            "match": {
              "arguments": [
                {
                  "val": "test-disk-1",
                  "offset": 17
                },
                {
                  "val": "1",
                  "offset": 58
                },
                {
                  "val": "2",
                  "offset": 76
                }
              ],
              "location": "PlannerDefs.verifyMirror(String,int,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 474400,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 312,
        "name": "LVM and storage redundancy - choose the right volume group",
        "description": "",
        "id": "storage-management;lvm-and-storage-redundancy---choose-the-right-volume-group",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 146499,
              "status": "passed"
            },
            "line": 313,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Distro Version"
                ],
                "line": 314
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7.1"
                ],
                "line": 315
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 187857,
              "status": "passed"
            },
            "line": 316,
            "name": "host host-1.example.com volume groups are:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostLvmCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "vg name",
                  "size",
                  "pvs"
                ],
                "line": 317
              },
              {
                "cells": [
                  "vg-1",
                  "2 TB",
                  "/dev/sda: 1024 GB, /dev/sdb: 1024 GB"
                ],
                "line": 318
              },
              {
                "cells": [
                  "vg-2",
                  "1.5 TB",
                  "/dev/sdc: 512 GB, /dev/sdd: 512 GB, /dev/sde: 512 GB"
                ],
                "line": 319
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 44782,
              "status": "passed"
            },
            "line": 320,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 321
              },
              {
                "cells": [
                  "test-disk-1",
                  "100 GB",
                  "false"
                ],
                "line": 322
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29398,
              "status": "passed"
            },
            "line": 323,
            "name": "Controller configuration \u0027lvm create volume enabled\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "lvm create volume enabled",
                  "offset": 26
                },
                {
                  "val": "enabled",
                  "offset": 56
                }
              ],
              "location": "PlannerDefs.setConfigurationBoolean(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17843,
              "status": "passed"
            },
            "line": 324,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 63623,
              "status": "passed"
            },
            "line": 325,
            "name": "volume group vg-1 on host host-1.example.com has 800GB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "vg-1",
                  "offset": 13
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "800GB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setVolumeGroupFreeCapacity(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 45456,
              "status": "passed"
            },
            "line": 326,
            "name": "volume group vg-2 on host host-1.example.com has 800GB free capacity",
            "match": {
              "arguments": [
                {
                  "val": "vg-2",
                  "offset": 13
                },
                {
                  "val": "host-1.example.com",
                  "offset": 26
                },
                {
                  "val": "800GB",
                  "offset": 49
                }
              ],
              "location": "PlannerDefs.setVolumeGroupFreeCapacity(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 49595,
              "status": "passed"
            },
            "line": 327,
            "name": "test-disk-1 has storage redundancy expectation: 2 copies",
            "match": {
              "arguments": [
                {
                  "val": "test-disk-1",
                  "offset": 0
                },
                {
                  "val": "2",
                  "offset": 48
                }
              ],
              "location": "PlannerDefs.setStorageRedundancyExpectation(String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3658501,
              "status": "passed"
            },
            "line": 328,
            "name": "virtual disk test-disk-1 gets an availability expectation",
            "match": {
              "arguments": [
                {
                  "val": "test-disk-1",
                  "offset": 13
                }
              ],
              "location": "PlannerDefs.createVirtualStorageAvailabilityExpectation(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 43649,
              "status": "passed"
            },
            "line": 329,
            "name": "the virtual disk test-disk-1 must be allocated on host-1.example.com under on the volume group vg-2",
            "match": {
              "arguments": [
                {
                  "val": "test-disk-1",
                  "offset": 17
                },
                {
                  "val": "host-1.example.com",
                  "offset": 50
                },
                {
                  "val": "vg-2",
                  "offset": 95
                }
              ],
              "location": "PlannerDefs.verifyVirtualStorageCreatedOnLvm(String,String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 61474,
              "status": "passed"
            },
            "line": 330,
            "name": "the virtual disk test-disk-1 must be mirrored using lvm - 2 mirrors as step 2",
            "match": {
              "arguments": [
                {
                  "val": "test-disk-1",
                  "offset": 17
                },
                {
                  "val": "2",
                  "offset": 58
                },
                {
                  "val": "2",
                  "offset": 76
                }
              ],
              "location": "PlannerDefs.verifyMirror(String,int,int)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "storage management",
    "description": "",
    "id": "storage-management",
    "keyword": "Feature",
    "uri": "stories/general/planner/storage.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 638071,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 46,
        "name": "Share a disk with NFS",
        "description": "",
        "id": "nfs-storage;share-a-disk-with-nfs;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 275961,
              "status": "passed"
            },
            "line": 4,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Dist. Version"
                ],
                "line": 5
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Fedora",
                  "23"
                ],
                "line": 6
              },
              {
                "cells": [
                  "host-2.example.com",
                  "8 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Fedora",
                  "23"
                ],
                "line": 7
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 94857,
              "status": "passed"
            },
            "line": 8,
            "name": "Controller configuration \u0027nfs enabled\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "nfs enabled",
                  "offset": 26
                },
                {
                  "val": "enabled",
                  "offset": 42
                }
              ],
              "location": "PlannerDefs.setConfigurationBoolean(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 101284,
              "status": "passed"
            },
            "line": 9,
            "name": "host host-1.example.com filesystem is:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostFilesystemCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mount point",
                  "size",
                  "x",
                  "filesystem"
                ],
                "line": 10
              },
              {
                "cells": [
                  "/kerub",
                  "4 TB",
                  "x",
                  "ext4"
                ],
                "line": 11
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24519,
              "status": "passed"
            },
            "line": 12,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17235,
              "status": "passed"
            },
            "line": 13,
            "name": "host host-2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 79829,
              "status": "passed"
            },
            "line": 14,
            "name": "host host-1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 15
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "sse,etc"
                ],
                "line": 16
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 60127,
              "status": "passed"
            },
            "line": 17,
            "name": "host host-2.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 18
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 19
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 55089,
              "status": "passed"
            },
            "line": 20,
            "name": "software installed on host host-1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 21
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 22
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 23
              },
              {
                "cells": [
                  "nfs-utils",
                  "1.0"
                ],
                "line": 24
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 47385,
              "status": "passed"
            },
            "line": 25,
            "name": "software installed on host host-2.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              4
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 26
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 27
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 65345,
              "status": "passed"
            },
            "line": 29,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 30
              },
              {
                "cells": [
                  "system-disk-1",
                  "2 GB",
                  "false"
                ],
                "line": 31
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 67515,
              "status": "passed"
            },
            "line": 32,
            "name": "the virtual disk system-disk-1 is created on host-1.example.com at /kerub",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 17
                },
                {
                  "val": "host-1.example.com",
                  "offset": 45
                },
                {
                  "val": "/kerub",
                  "offset": 67
                }
              ],
              "location": "PlannerDefs.createVStorageDyn(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 88198,
              "status": "passed"
            },
            "line": 33,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 34
              },
              {
                "cells": [
                  "vm1",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 35
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 32655,
              "status": "passed"
            },
            "line": 36,
            "name": "system-disk-1 is attached to vm1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "vm1",
                  "offset": 29
                }
              ],
              "location": "PlannerDefs.attachDiskToVm(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13822058,
              "status": "passed"
            },
            "line": 37,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 156646,
              "status": "passed"
            },
            "line": 38,
            "name": "nfs must be started on host host-1.example.com as step 1",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 28
                },
                {
                  "val": "1",
                  "offset": 55
                }
              ],
              "location": "PlannerDefs.verifyDirectoryNfsStart(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 138874,
              "status": "passed"
            },
            "line": 39,
            "name": "/kerub must be shared with nfs on host host-1.example.com as step 2",
            "match": {
              "arguments": [
                {
                  "val": "/kerub",
                  "offset": 0
                },
                {
                  "val": "host-1.example.com",
                  "offset": 39
                },
                {
                  "val": "2",
                  "offset": 66
                }
              ],
              "location": "PlannerDefs.verifyDirectoryNfsShare(String,String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 105643,
              "status": "passed"
            },
            "line": 40,
            "name": "host-1.example.com:/kerub must be mounted on host-2.example.com as step 3",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 0
                },
                {
                  "val": "/kerub",
                  "offset": 19
                },
                {
                  "val": "host-2.example.com",
                  "offset": 45
                },
                {
                  "val": "3",
                  "offset": 72
                }
              ],
              "location": "PlannerDefs.verifyDirectoryNfsMount(String,String,String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 60068,
              "status": "passed"
            },
            "line": 41,
            "name": "VM vm1 gets scheduled on host host-2.example.com as step 4",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "host-2.example.com",
                  "offset": 30
                },
                {
                  "val": "4",
                  "offset": 57
                }
              ],
              "location": "PlannerDefs.verifyVmGetsScheduledWithStepNumber(String,String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 539021,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 47,
        "name": "Share a disk with NFS",
        "description": "",
        "id": "nfs-storage;share-a-disk-with-nfs;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 164302,
              "status": "passed"
            },
            "line": 4,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Dist. Version"
                ],
                "line": 5
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "openSUSE",
                  "13"
                ],
                "line": 6
              },
              {
                "cells": [
                  "host-2.example.com",
                  "8 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "openSUSE",
                  "13"
                ],
                "line": 7
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 38429,
              "status": "passed"
            },
            "line": 8,
            "name": "Controller configuration \u0027nfs enabled\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "nfs enabled",
                  "offset": 26
                },
                {
                  "val": "enabled",
                  "offset": 42
                }
              ],
              "location": "PlannerDefs.setConfigurationBoolean(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 84720,
              "status": "passed"
            },
            "line": 9,
            "name": "host host-1.example.com filesystem is:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostFilesystemCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mount point",
                  "size",
                  "x",
                  "filesystem"
                ],
                "line": 10
              },
              {
                "cells": [
                  "/kerub",
                  "4 TB",
                  "x",
                  "ext4"
                ],
                "line": 11
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 27908,
              "status": "passed"
            },
            "line": 12,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20903,
              "status": "passed"
            },
            "line": 13,
            "name": "host host-2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 80126,
              "status": "passed"
            },
            "line": 14,
            "name": "host host-1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 15
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "sse,etc"
                ],
                "line": 16
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 90208,
              "status": "passed"
            },
            "line": 17,
            "name": "host host-2.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 18
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 19
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 77121,
              "status": "passed"
            },
            "line": 20,
            "name": "software installed on host host-1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 21
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 22
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 23
              },
              {
                "cells": [
                  "nfs-kernel-server",
                  "1.0"
                ],
                "line": 24
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 42729,
              "status": "passed"
            },
            "line": 25,
            "name": "software installed on host host-2.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              4
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 26
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 27
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 53699,
              "status": "passed"
            },
            "line": 29,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 30
              },
              {
                "cells": [
                  "system-disk-1",
                  "2 GB",
                  "false"
                ],
                "line": 31
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 75730,
              "status": "passed"
            },
            "line": 32,
            "name": "the virtual disk system-disk-1 is created on host-1.example.com at /kerub",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 17
                },
                {
                  "val": "host-1.example.com",
                  "offset": 45
                },
                {
                  "val": "/kerub",
                  "offset": 67
                }
              ],
              "location": "PlannerDefs.createVStorageDyn(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 146351,
              "status": "passed"
            },
            "line": 33,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 34
              },
              {
                "cells": [
                  "vm1",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 35
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 42315,
              "status": "passed"
            },
            "line": 36,
            "name": "system-disk-1 is attached to vm1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "vm1",
                  "offset": 29
                }
              ],
              "location": "PlannerDefs.attachDiskToVm(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6936494,
              "status": "passed"
            },
            "line": 37,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 70074,
              "status": "passed"
            },
            "line": 38,
            "name": "nfs must be started on host host-1.example.com as step 1",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 28
                },
                {
                  "val": "1",
                  "offset": 55
                }
              ],
              "location": "PlannerDefs.verifyDirectoryNfsStart(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 36547,
              "status": "passed"
            },
            "line": 39,
            "name": "/kerub must be shared with nfs on host host-1.example.com as step 2",
            "match": {
              "arguments": [
                {
                  "val": "/kerub",
                  "offset": 0
                },
                {
                  "val": "host-1.example.com",
                  "offset": 39
                },
                {
                  "val": "2",
                  "offset": 66
                }
              ],
              "location": "PlannerDefs.verifyDirectoryNfsShare(String,String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 37135,
              "status": "passed"
            },
            "line": 40,
            "name": "host-1.example.com:/kerub must be mounted on host-2.example.com as step 3",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 0
                },
                {
                  "val": "/kerub",
                  "offset": 19
                },
                {
                  "val": "host-2.example.com",
                  "offset": 45
                },
                {
                  "val": "3",
                  "offset": 72
                }
              ],
              "location": "PlannerDefs.verifyDirectoryNfsMount(String,String,String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30241,
              "status": "passed"
            },
            "line": 41,
            "name": "VM vm1 gets scheduled on host host-2.example.com as step 4",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "host-2.example.com",
                  "offset": 30
                },
                {
                  "val": "4",
                  "offset": 57
                }
              ],
              "location": "PlannerDefs.verifyVmGetsScheduledWithStepNumber(String,String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 983803,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 48,
        "name": "Share a disk with NFS",
        "description": "",
        "id": "nfs-storage;share-a-disk-with-nfs;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 185233,
              "status": "passed"
            },
            "line": 4,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Dist. Version"
                ],
                "line": 5
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7.1"
                ],
                "line": 6
              },
              {
                "cells": [
                  "host-2.example.com",
                  "8 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7.1"
                ],
                "line": 7
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 34467,
              "status": "passed"
            },
            "line": 8,
            "name": "Controller configuration \u0027nfs enabled\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "nfs enabled",
                  "offset": 26
                },
                {
                  "val": "enabled",
                  "offset": 42
                }
              ],
              "location": "PlannerDefs.setConfigurationBoolean(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 239693,
              "status": "passed"
            },
            "line": 9,
            "name": "host host-1.example.com filesystem is:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostFilesystemCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mount point",
                  "size",
                  "x",
                  "filesystem"
                ],
                "line": 10
              },
              {
                "cells": [
                  "/kerub",
                  "4 TB",
                  "x",
                  "ext4"
                ],
                "line": 11
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 37306,
              "status": "passed"
            },
            "line": 12,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12995,
              "status": "passed"
            },
            "line": 13,
            "name": "host host-2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 84550,
              "status": "passed"
            },
            "line": 14,
            "name": "host host-1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 15
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "sse,etc"
                ],
                "line": 16
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 93672,
              "status": "passed"
            },
            "line": 17,
            "name": "host host-2.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 18
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 19
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 69410,
              "status": "passed"
            },
            "line": 20,
            "name": "software installed on host host-1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 21
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 22
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 23
              },
              {
                "cells": [
                  "nfs-utils",
                  "1.0"
                ],
                "line": 24
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 53914,
              "status": "passed"
            },
            "line": 25,
            "name": "software installed on host host-2.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              4
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 26
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 27
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 48125,
              "status": "passed"
            },
            "line": 29,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 30
              },
              {
                "cells": [
                  "system-disk-1",
                  "2 GB",
                  "false"
                ],
                "line": 31
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 50272,
              "status": "passed"
            },
            "line": 32,
            "name": "the virtual disk system-disk-1 is created on host-1.example.com at /kerub",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 17
                },
                {
                  "val": "host-1.example.com",
                  "offset": 45
                },
                {
                  "val": "/kerub",
                  "offset": 67
                }
              ],
              "location": "PlannerDefs.createVStorageDyn(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 126618,
              "status": "passed"
            },
            "line": 33,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 34
              },
              {
                "cells": [
                  "vm1",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 35
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 45071,
              "status": "passed"
            },
            "line": 36,
            "name": "system-disk-1 is attached to vm1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "vm1",
                  "offset": 29
                }
              ],
              "location": "PlannerDefs.attachDiskToVm(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5300110,
              "status": "passed"
            },
            "line": 37,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 82937,
              "status": "passed"
            },
            "line": 38,
            "name": "nfs must be started on host host-1.example.com as step 1",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 28
                },
                {
                  "val": "1",
                  "offset": 55
                }
              ],
              "location": "PlannerDefs.verifyDirectoryNfsStart(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 53591,
              "status": "passed"
            },
            "line": 39,
            "name": "/kerub must be shared with nfs on host host-1.example.com as step 2",
            "match": {
              "arguments": [
                {
                  "val": "/kerub",
                  "offset": 0
                },
                {
                  "val": "host-1.example.com",
                  "offset": 39
                },
                {
                  "val": "2",
                  "offset": 66
                }
              ],
              "location": "PlannerDefs.verifyDirectoryNfsShare(String,String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 57484,
              "status": "passed"
            },
            "line": 40,
            "name": "host-1.example.com:/kerub must be mounted on host-2.example.com as step 3",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 0
                },
                {
                  "val": "/kerub",
                  "offset": 19
                },
                {
                  "val": "host-2.example.com",
                  "offset": 45
                },
                {
                  "val": "3",
                  "offset": 72
                }
              ],
              "location": "PlannerDefs.verifyDirectoryNfsMount(String,String,String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 46282,
              "status": "passed"
            },
            "line": 41,
            "name": "VM vm1 gets scheduled on host host-2.example.com as step 4",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "host-2.example.com",
                  "offset": 30
                },
                {
                  "val": "4",
                  "offset": 57
                }
              ],
              "location": "PlannerDefs.verifyVmGetsScheduledWithStepNumber(String,String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 600967,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 49,
        "name": "Share a disk with NFS",
        "description": "",
        "id": "nfs-storage;share-a-disk-with-nfs;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 203418,
              "status": "passed"
            },
            "line": 4,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Dist. Version"
                ],
                "line": 5
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Debian",
                  "8.6"
                ],
                "line": 6
              },
              {
                "cells": [
                  "host-2.example.com",
                  "8 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Debian",
                  "8.6"
                ],
                "line": 7
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 44087,
              "status": "passed"
            },
            "line": 8,
            "name": "Controller configuration \u0027nfs enabled\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "nfs enabled",
                  "offset": 26
                },
                {
                  "val": "enabled",
                  "offset": 42
                }
              ],
              "location": "PlannerDefs.setConfigurationBoolean(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 76321,
              "status": "passed"
            },
            "line": 9,
            "name": "host host-1.example.com filesystem is:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostFilesystemCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mount point",
                  "size",
                  "x",
                  "filesystem"
                ],
                "line": 10
              },
              {
                "cells": [
                  "/kerub",
                  "4 TB",
                  "x",
                  "ext4"
                ],
                "line": 11
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18976,
              "status": "passed"
            },
            "line": 12,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12149,
              "status": "passed"
            },
            "line": 13,
            "name": "host host-2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 88863,
              "status": "passed"
            },
            "line": 14,
            "name": "host host-1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 15
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "sse,etc"
                ],
                "line": 16
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 49773,
              "status": "passed"
            },
            "line": 17,
            "name": "host host-2.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 18
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 19
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 45344,
              "status": "passed"
            },
            "line": 20,
            "name": "software installed on host host-1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 21
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 22
              },
              {
                "cells": [
                  "libvirt-clients,libvirt-daemon",
                  "1.2.18"
                ],
                "line": 23
              },
              {
                "cells": [
                  "nfs-kernel-server",
                  "1.0"
                ],
                "line": 24
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 31570,
              "status": "passed"
            },
            "line": 25,
            "name": "software installed on host host-2.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              4
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 26
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 27
              },
              {
                "cells": [
                  "libvirt-clients,libvirt-daemon",
                  "1.2.18"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 49284,
              "status": "passed"
            },
            "line": 29,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 30
              },
              {
                "cells": [
                  "system-disk-1",
                  "2 GB",
                  "false"
                ],
                "line": 31
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 119607,
              "status": "passed"
            },
            "line": 32,
            "name": "the virtual disk system-disk-1 is created on host-1.example.com at /kerub",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 17
                },
                {
                  "val": "host-1.example.com",
                  "offset": 45
                },
                {
                  "val": "/kerub",
                  "offset": 67
                }
              ],
              "location": "PlannerDefs.createVStorageDyn(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 89974,
              "status": "passed"
            },
            "line": 33,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 34
              },
              {
                "cells": [
                  "vm1",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 35
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 347640,
              "status": "passed"
            },
            "line": 36,
            "name": "system-disk-1 is attached to vm1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "vm1",
                  "offset": 29
                }
              ],
              "location": "PlannerDefs.attachDiskToVm(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6078808,
              "status": "passed"
            },
            "line": 37,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 67088,
              "status": "passed"
            },
            "line": 38,
            "name": "nfs must be started on host host-1.example.com as step 1",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 28
                },
                {
                  "val": "1",
                  "offset": 55
                }
              ],
              "location": "PlannerDefs.verifyDirectoryNfsStart(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 38413,
              "status": "passed"
            },
            "line": 39,
            "name": "/kerub must be shared with nfs on host host-1.example.com as step 2",
            "match": {
              "arguments": [
                {
                  "val": "/kerub",
                  "offset": 0
                },
                {
                  "val": "host-1.example.com",
                  "offset": 39
                },
                {
                  "val": "2",
                  "offset": 66
                }
              ],
              "location": "PlannerDefs.verifyDirectoryNfsShare(String,String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 42006,
              "status": "passed"
            },
            "line": 40,
            "name": "host-1.example.com:/kerub must be mounted on host-2.example.com as step 3",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 0
                },
                {
                  "val": "/kerub",
                  "offset": 19
                },
                {
                  "val": "host-2.example.com",
                  "offset": 45
                },
                {
                  "val": "3",
                  "offset": 72
                }
              ],
              "location": "PlannerDefs.verifyDirectoryNfsMount(String,String,String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 28321,
              "status": "passed"
            },
            "line": 41,
            "name": "VM vm1 gets scheduled on host host-2.example.com as step 4",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "host-2.example.com",
                  "offset": 30
                },
                {
                  "val": "4",
                  "offset": 57
                }
              ],
              "location": "PlannerDefs.verifyVmGetsScheduledWithStepNumber(String,String,int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2047644,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 50,
        "name": "Share a disk with NFS",
        "description": "",
        "id": "nfs-storage;share-a-disk-with-nfs;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 137186,
              "status": "passed"
            },
            "line": 4,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Dist. Version"
                ],
                "line": 5
              },
              {
                "cells": [
                  "host-1.example.com",
                  "2 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Ubuntu",
                  "14.0.4"
                ],
                "line": 6
              },
              {
                "cells": [
                  "host-2.example.com",
                  "8 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Ubuntu",
                  "14.0.4"
                ],
                "line": 7
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 32092,
              "status": "passed"
            },
            "line": 8,
            "name": "Controller configuration \u0027nfs enabled\u0027 is enabled",
            "match": {
              "arguments": [
                {
                  "val": "nfs enabled",
                  "offset": 26
                },
                {
                  "val": "enabled",
                  "offset": 42
                }
              ],
              "location": "PlannerDefs.setConfigurationBoolean(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 56224,
              "status": "passed"
            },
            "line": 9,
            "name": "host host-1.example.com filesystem is:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostFilesystemCapabilities(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mount point",
                  "size",
                  "x",
                  "filesystem"
                ],
                "line": 10
              },
              {
                "cells": [
                  "/kerub",
                  "4 TB",
                  "x",
                  "ext4"
                ],
                "line": 11
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 36157,
              "status": "passed"
            },
            "line": 12,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17609,
              "status": "passed"
            },
            "line": 13,
            "name": "host host-2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 84502,
              "status": "passed"
            },
            "line": 14,
            "name": "host host-1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 15
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "sse,etc"
                ],
                "line": 16
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 47084,
              "status": "passed"
            },
            "line": 17,
            "name": "host host-2.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 18
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "vmx,sse,etc"
                ],
                "line": 19
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 62974,
              "status": "passed"
            },
            "line": 20,
            "name": "software installed on host host-1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 21
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 22
              },
              {
                "cells": [
                  "libvirt-bin",
                  "1.2.18"
                ],
                "line": 23
              },
              {
                "cells": [
                  "nfs-kernel-server",
                  "1.0"
                ],
                "line": 24
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 43750,
              "status": "passed"
            },
            "line": 25,
            "name": "software installed on host host-2.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              4
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 26
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 27
              },
              {
                "cells": [
                  "libvirt-bin",
                  "1.2.18"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 92336,
              "status": "passed"
            },
            "line": 29,
            "name": "virtual storage devices:",
            "match": {
              "location": "PlannerDefs.setVirtualStorageDevices(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "size",
                  "ro"
                ],
                "line": 30
              },
              {
                "cells": [
                  "system-disk-1",
                  "2 GB",
                  "false"
                ],
                "line": 31
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 58822,
              "status": "passed"
            },
            "line": 32,
            "name": "the virtual disk system-disk-1 is created on host-1.example.com at /kerub",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 17
                },
                {
                  "val": "host-1.example.com",
                  "offset": 45
                },
                {
                  "val": "/kerub",
                  "offset": 67
                }
              ],
              "location": "PlannerDefs.createVStorageDyn(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 92888,
              "status": "passed"
            },
            "line": 33,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 34
              },
              {
                "cells": [
                  "vm1",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 35
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 56306,
              "status": "passed"
            },
            "line": 36,
            "name": "system-disk-1 is attached to vm1",
            "match": {
              "arguments": [
                {
                  "val": "system-disk-1",
                  "offset": 0
                },
                {
                  "val": "vm1",
                  "offset": 29
                }
              ],
              "location": "PlannerDefs.attachDiskToVm(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12082364,
              "status": "passed"
            },
            "line": 37,
            "name": "VM vm1 is started",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                }
              ],
              "location": "PlannerDefs.startVm(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 80531,
              "status": "passed"
            },
            "line": 38,
            "name": "nfs must be started on host host-1.example.com as step 1",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 28
                },
                {
                  "val": "1",
                  "offset": 55
                }
              ],
              "location": "PlannerDefs.verifyDirectoryNfsStart(String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 74420,
              "status": "passed"
            },
            "line": 39,
            "name": "/kerub must be shared with nfs on host host-1.example.com as step 2",
            "match": {
              "arguments": [
                {
                  "val": "/kerub",
                  "offset": 0
                },
                {
                  "val": "host-1.example.com",
                  "offset": 39
                },
                {
                  "val": "2",
                  "offset": 66
                }
              ],
              "location": "PlannerDefs.verifyDirectoryNfsShare(String,String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 53944,
              "status": "passed"
            },
            "line": 40,
            "name": "host-1.example.com:/kerub must be mounted on host-2.example.com as step 3",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 0
                },
                {
                  "val": "/kerub",
                  "offset": 19
                },
                {
                  "val": "host-2.example.com",
                  "offset": 45
                },
                {
                  "val": "3",
                  "offset": 72
                }
              ],
              "location": "PlannerDefs.verifyDirectoryNfsMount(String,String,String,int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 42178,
              "status": "passed"
            },
            "line": 41,
            "name": "VM vm1 gets scheduled on host host-2.example.com as step 4",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "host-2.example.com",
                  "offset": 30
                },
                {
                  "val": "4",
                  "offset": 57
                }
              ],
              "location": "PlannerDefs.verifyVmGetsScheduledWithStepNumber(String,String,int)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "NFS storage",
    "description": "",
    "id": "nfs-storage",
    "keyword": "Feature",
    "uri": "stories/general/planner/storage.nfs.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 827986,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 33,
        "name": "start two vms sharing one network on the same host",
        "description": "",
        "id": "virtual-networking-with-openvswitch;start-two-vms-sharing-one-network-on-the-same-host;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 135175,
              "status": "passed"
            },
            "line": 4,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Dist. Version"
                ],
                "line": 5
              },
              {
                "cells": [
                  "host-1.example.com",
                  "128 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOS Linux",
                  "7.1"
                ],
                "line": 6
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 37477,
              "status": "passed"
            },
            "line": 7,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 103330,
              "status": "passed"
            },
            "line": 8,
            "name": "host host-1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 9
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "sse,vmx"
                ],
                "line": 10
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 60856,
              "status": "passed"
            },
            "line": 11,
            "name": "software installed on host host-1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              3
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 12
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 13
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 14
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 91584,
              "status": "passed"
            },
            "line": 15,
            "name": "virtual networks:",
            "match": {
              "location": "PlannerDefs.setVirtualNetworks(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name"
                ],
                "line": 16
              },
              {
                "cells": [
                  "vnet-1"
                ],
                "line": 17
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 104810,
              "status": "passed"
            },
            "line": 18,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 19
              },
              {
                "cells": [
                  "vm1",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 20
              },
              {
                "cells": [
                  "vm2",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 21
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 744035,
              "status": "passed"
            },
            "line": 22,
            "name": "VM vm1 has NIC of type virtio connected to network vnet-1",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "virtio",
                  "offset": 23
                },
                {
                  "val": "vnet-1",
                  "offset": 51
                }
              ],
              "location": "PlannerDefs.setVmNetworkCard(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 54757,
              "status": "passed"
            },
            "line": 23,
            "name": "VM vm2 has NIC of type virtio connected to network vnet-1",
            "match": {
              "arguments": [
                {
                  "val": "vm2",
                  "offset": 3
                },
                {
                  "val": "virtio",
                  "offset": 23
                },
                {
                  "val": "vnet-1",
                  "offset": 51
                }
              ],
              "location": "PlannerDefs.setVmNetworkCard(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29657252,
              "status": "passed"
            },
            "line": 24,
            "name": "VMs vm1,vm2 are started",
            "match": {
              "arguments": [
                {
                  "val": "vm1,vm2",
                  "offset": 4
                }
              ],
              "location": "PlannerDefs.startVms(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 70208,
              "status": "passed"
            },
            "line": 25,
            "name": "ovs switch will be created on host host-1.example.com for network vnet-1",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 35
                },
                {
                  "val": "vnet-1",
                  "offset": 66
                }
              ],
              "location": "PlannerDefs.verifyVirtualSwitchCreated(String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 68040,
              "status": "passed"
            },
            "line": 26,
            "name": "ovs port will be created on host host-1.example.com on network vnet-1 for vm1",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 33
                },
                {
                  "val": "vnet-1",
                  "offset": 63
                },
                {
                  "val": "vm1",
                  "offset": 74
                }
              ],
              "location": "PlannerDefs.verifyPortCreated(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 49496,
              "status": "passed"
            },
            "line": 27,
            "name": "ovs port will be created on host host-1.example.com on network vnet-1 for vm2",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 33
                },
                {
                  "val": "vnet-1",
                  "offset": 63
                },
                {
                  "val": "vm2",
                  "offset": 74
                }
              ],
              "location": "PlannerDefs.verifyPortCreated(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29901,
              "status": "passed"
            },
            "line": 28,
            "name": "VM vm1 gets scheduled on host host-1.example.com",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "host-1.example.com",
                  "offset": 30
                }
              ],
              "location": "PlannerDefs.verifyVmGetsScheduled(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 27492,
              "status": "passed"
            },
            "line": 29,
            "name": "VM vm2 gets scheduled on host host-1.example.com",
            "match": {
              "arguments": [
                {
                  "val": "vm2",
                  "offset": 3
                },
                {
                  "val": "host-1.example.com",
                  "offset": 30
                }
              ],
              "location": "PlannerDefs.verifyVmGetsScheduled(String,String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 671393,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 34,
        "name": "start two vms sharing one network on the same host",
        "description": "",
        "id": "virtual-networking-with-openvswitch;start-two-vms-sharing-one-network-on-the-same-host;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 146948,
              "status": "passed"
            },
            "line": 4,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Dist. Version"
                ],
                "line": 5
              },
              {
                "cells": [
                  "host-1.example.com",
                  "128 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "openSUSE",
                  "42.0"
                ],
                "line": 6
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 30526,
              "status": "passed"
            },
            "line": 7,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 80172,
              "status": "passed"
            },
            "line": 8,
            "name": "host host-1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 9
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "sse,vmx"
                ],
                "line": 10
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 49908,
              "status": "passed"
            },
            "line": 11,
            "name": "software installed on host host-1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              3
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 12
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 13
              },
              {
                "cells": [
                  "libvirt-client",
                  "1.2.18"
                ],
                "line": 14
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 37181,
              "status": "passed"
            },
            "line": 15,
            "name": "virtual networks:",
            "match": {
              "location": "PlannerDefs.setVirtualNetworks(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name"
                ],
                "line": 16
              },
              {
                "cells": [
                  "vnet-1"
                ],
                "line": 17
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 195736,
              "status": "passed"
            },
            "line": 18,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 19
              },
              {
                "cells": [
                  "vm1",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 20
              },
              {
                "cells": [
                  "vm2",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 21
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 49942,
              "status": "passed"
            },
            "line": 22,
            "name": "VM vm1 has NIC of type virtio connected to network vnet-1",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "virtio",
                  "offset": 23
                },
                {
                  "val": "vnet-1",
                  "offset": 51
                }
              ],
              "location": "PlannerDefs.setVmNetworkCard(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 33026,
              "status": "passed"
            },
            "line": 23,
            "name": "VM vm2 has NIC of type virtio connected to network vnet-1",
            "match": {
              "arguments": [
                {
                  "val": "vm2",
                  "offset": 3
                },
                {
                  "val": "virtio",
                  "offset": 23
                },
                {
                  "val": "vnet-1",
                  "offset": 51
                }
              ],
              "location": "PlannerDefs.setVmNetworkCard(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3988495,
              "status": "passed"
            },
            "line": 24,
            "name": "VMs vm1,vm2 are started",
            "match": {
              "arguments": [
                {
                  "val": "vm1,vm2",
                  "offset": 4
                }
              ],
              "location": "PlannerDefs.startVms(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 48845,
              "status": "passed"
            },
            "line": 25,
            "name": "ovs switch will be created on host host-1.example.com for network vnet-1",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 35
                },
                {
                  "val": "vnet-1",
                  "offset": 66
                }
              ],
              "location": "PlannerDefs.verifyVirtualSwitchCreated(String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 47389,
              "status": "passed"
            },
            "line": 26,
            "name": "ovs port will be created on host host-1.example.com on network vnet-1 for vm1",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 33
                },
                {
                  "val": "vnet-1",
                  "offset": 63
                },
                {
                  "val": "vm1",
                  "offset": 74
                }
              ],
              "location": "PlannerDefs.verifyPortCreated(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 51755,
              "status": "passed"
            },
            "line": 27,
            "name": "ovs port will be created on host host-1.example.com on network vnet-1 for vm2",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 33
                },
                {
                  "val": "vnet-1",
                  "offset": 63
                },
                {
                  "val": "vm2",
                  "offset": 74
                }
              ],
              "location": "PlannerDefs.verifyPortCreated(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 32546,
              "status": "passed"
            },
            "line": 28,
            "name": "VM vm1 gets scheduled on host host-1.example.com",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "host-1.example.com",
                  "offset": 30
                }
              ],
              "location": "PlannerDefs.verifyVmGetsScheduled(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 27181,
              "status": "passed"
            },
            "line": 29,
            "name": "VM vm2 gets scheduled on host host-1.example.com",
            "match": {
              "arguments": [
                {
                  "val": "vm2",
                  "offset": 3
                },
                {
                  "val": "host-1.example.com",
                  "offset": 30
                }
              ],
              "location": "PlannerDefs.verifyVmGetsScheduled(String,String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 578366,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 35,
        "name": "start two vms sharing one network on the same host",
        "description": "",
        "id": "virtual-networking-with-openvswitch;start-two-vms-sharing-one-network-on-the-same-host;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 138788,
              "status": "passed"
            },
            "line": 4,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Dist. Version"
                ],
                "line": 5
              },
              {
                "cells": [
                  "host-1.example.com",
                  "128 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "Ubuntu",
                  "18.04"
                ],
                "line": 6
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 34780,
              "status": "passed"
            },
            "line": 7,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 94328,
              "status": "passed"
            },
            "line": 8,
            "name": "host host-1.example.com CPUs are 4:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                },
                {
                  "val": "4",
                  "offset": 33
                }
              ],
              "location": "PlannerDefs.setHostCpus(String,int,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Manufacturer",
                  "Mhz",
                  "Name",
                  "Flags"
                ],
                "line": 9
              },
              {
                "cells": [
                  "GenuineIntel",
                  "2400",
                  "Intel Xeon",
                  "sse,vmx"
                ],
                "line": 10
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 44360,
              "status": "passed"
            },
            "line": 11,
            "name": "software installed on host host-1.example.com:",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 27
                }
              ],
              "location": "PlannerDefs.setHostInstalledSoftware(String,DataTable)"
            },
            "matchedColumns": [
              3
            ],
            "rows": [
              {
                "cells": [
                  "package",
                  "version"
                ],
                "line": 12
              },
              {
                "cells": [
                  "qemu-kvm",
                  "2.4.1"
                ],
                "line": 13
              },
              {
                "cells": [
                  "libvirt-bin",
                  "1.2.18"
                ],
                "line": 14
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 33455,
              "status": "passed"
            },
            "line": 15,
            "name": "virtual networks:",
            "match": {
              "location": "PlannerDefs.setVirtualNetworks(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name"
                ],
                "line": 16
              },
              {
                "cells": [
                  "vnet-1"
                ],
                "line": 17
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 79081,
              "status": "passed"
            },
            "line": 18,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 19
              },
              {
                "cells": [
                  "vm1",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 20
              },
              {
                "cells": [
                  "vm2",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 21
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 32437,
              "status": "passed"
            },
            "line": 22,
            "name": "VM vm1 has NIC of type virtio connected to network vnet-1",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "virtio",
                  "offset": 23
                },
                {
                  "val": "vnet-1",
                  "offset": 51
                }
              ],
              "location": "PlannerDefs.setVmNetworkCard(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23090,
              "status": "passed"
            },
            "line": 23,
            "name": "VM vm2 has NIC of type virtio connected to network vnet-1",
            "match": {
              "arguments": [
                {
                  "val": "vm2",
                  "offset": 3
                },
                {
                  "val": "virtio",
                  "offset": 23
                },
                {
                  "val": "vnet-1",
                  "offset": 51
                }
              ],
              "location": "PlannerDefs.setVmNetworkCard(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5362405,
              "status": "passed"
            },
            "line": 24,
            "name": "VMs vm1,vm2 are started",
            "match": {
              "arguments": [
                {
                  "val": "vm1,vm2",
                  "offset": 4
                }
              ],
              "location": "PlannerDefs.startVms(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 45390,
              "status": "passed"
            },
            "line": 25,
            "name": "ovs switch will be created on host host-1.example.com for network vnet-1",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 35
                },
                {
                  "val": "vnet-1",
                  "offset": 66
                }
              ],
              "location": "PlannerDefs.verifyVirtualSwitchCreated(String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 53370,
              "status": "passed"
            },
            "line": 26,
            "name": "ovs port will be created on host host-1.example.com on network vnet-1 for vm1",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 33
                },
                {
                  "val": "vnet-1",
                  "offset": 63
                },
                {
                  "val": "vm1",
                  "offset": 74
                }
              ],
              "location": "PlannerDefs.verifyPortCreated(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 35815,
              "status": "passed"
            },
            "line": 27,
            "name": "ovs port will be created on host host-1.example.com on network vnet-1 for vm2",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 33
                },
                {
                  "val": "vnet-1",
                  "offset": 63
                },
                {
                  "val": "vm2",
                  "offset": 74
                }
              ],
              "location": "PlannerDefs.verifyPortCreated(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23344,
              "status": "passed"
            },
            "line": 28,
            "name": "VM vm1 gets scheduled on host host-1.example.com",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 3
                },
                {
                  "val": "host-1.example.com",
                  "offset": 30
                }
              ],
              "location": "PlannerDefs.verifyVmGetsScheduled(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25285,
              "status": "passed"
            },
            "line": 29,
            "name": "VM vm2 gets scheduled on host host-1.example.com",
            "match": {
              "arguments": [
                {
                  "val": "vm2",
                  "offset": 3
                },
                {
                  "val": "host-1.example.com",
                  "offset": 30
                }
              ],
              "location": "PlannerDefs.verifyVmGetsScheduled(String,String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Virtual networking with openVSwitch",
    "description": "",
    "id": "virtual-networking-with-openvswitch",
    "keyword": "Feature",
    "uri": "stories/general/planner/virtual-network-ovs.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 596584,
              "status": "passed"
            },
            "match": {
              "location": "PlannerDefs.setup()"
            }
          }
        ],
        "line": 22,
        "name": "Migrate the VMs from host to be recycled to another host",
        "description": "",
        "id": "vm-migrations;migrate-the-vms-from-host-to-be-recycled-to-another-host;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 184398,
              "status": "passed"
            },
            "line": 4,
            "name": "hosts:",
            "match": {
              "location": "PlannerDefs.hosts(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2
            ],
            "rows": [
              {
                "cells": [
                  "address",
                  "ram",
                  "Cores",
                  "Threads",
                  "Architecture",
                  "Operating System",
                  "Distribution",
                  "Dist. Version"
                ],
                "line": 5
              },
              {
                "cells": [
                  "host-1.example.com",
                  "8 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOs",
                  "7.3"
                ],
                "line": 6
              },
              {
                "cells": [
                  "host-2.example.com",
                  "8 GB",
                  "2",
                  "4",
                  "x86_64",
                  "Linux",
                  "CentOs",
                  "7.3"
                ],
                "line": 7
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 72419,
              "status": "passed"
            },
            "line": 8,
            "name": "VMs:",
            "match": {
              "location": "PlannerDefs.setVms(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "MinRam",
                  "MaxRam",
                  "CPUs",
                  "Architecture"
                ],
                "line": 9
              },
              {
                "cells": [
                  "vm1",
                  "4 GB",
                  "4 GB",
                  "2",
                  "x86_64"
                ],
                "line": 10
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 32352,
              "status": "passed"
            },
            "line": 11,
            "name": "host host-1.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 27516,
              "status": "passed"
            },
            "line": 12,
            "name": "host host-1.example.com is scheduled for recycling",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHoostRecycle(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22882,
              "status": "passed"
            },
            "line": 13,
            "name": "host host-2.example.com is Up",
            "match": {
              "arguments": [
                {
                  "val": "host-2.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.setHostDyn(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 60131,
              "status": "passed"
            },
            "line": 14,
            "name": "vm1 is running on host-1.example.com",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 0
                },
                {
                  "val": "host-1.example.com",
                  "offset": 18
                }
              ],
              "location": "PlannerDefs.setVmRunningOnHost(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6127985,
              "status": "passed"
            },
            "line": 15,
            "name": "planner starts",
            "match": {
              "location": "PlannerDefs.kickPlanner()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 106298,
              "status": "passed"
            },
            "line": 16,
            "name": "vm1 will be migrated to host-2.example.com as step 1",
            "match": {
              "arguments": [
                {
                  "val": "vm1",
                  "offset": 0
                },
                {
                  "val": "host-2.example.com",
                  "offset": 24
                },
                {
                  "val": "1",
                  "offset": 51
                }
              ],
              "location": "PlannerDefs.verifyVmMigration(String,String,int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 32881,
              "status": "passed"
            },
            "line": 17,
            "name": "host host-1.example.com will be powered down",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                },
                {}
              ],
              "location": "PlannerDefs.verifyHostPowerDown(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13309,
              "status": "passed"
            },
            "line": 18,
            "name": "host host-1.example.com will be recycled",
            "match": {
              "arguments": [
                {
                  "val": "host-1.example.com",
                  "offset": 5
                }
              ],
              "location": "PlannerDefs.verifyHostRecycle(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "VM migrations",
    "description": "",
    "id": "vm-migrations",
    "keyword": "Feature",
    "uri": "stories/general/planner/vm-migration.feature"
  }
]